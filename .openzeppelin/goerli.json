{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xafbFb8087bf5C5448801a9622e0EdEbac3dA1606",
    "txHash": "0x72d921124a5bd16d5fcfd7a5766f90333cfd9e925e925bab6e9c8d60eb526d46"
  },
  "proxies": [
    {
      "address": "0x296e48b6aC818A3Cb86C9542dE985435932300dA",
      "txHash": "0x5f0168aea975ad4903528dd44fb3f79a124e384e079cdc8c431902189f56d476",
      "kind": "transparent"
    },
    {
      "address": "0x312898ca3019f14B7894b37858533a94862D4140",
      "txHash": "0x418003b1f4bd2d6f42262db730910ace5aed6f3b707b5408c90997a666727483",
      "kind": "transparent"
    },
    {
      "address": "0x69521885abce7C731DFB0a28D303055e95E99b58",
      "txHash": "0xc515cb19b4cbd3c32ce50b0785161526dcc662024b145d1e911d2ce211676db9",
      "kind": "transparent"
    },
    {
      "address": "0xb97d7EA41D52C2dB34D50E333c1e5b8d2DAAe751",
      "txHash": "0x13ef9b1508b75ec6ea9812816ed08fae4cf8271b2fcd7e7364227aa6a3bf1612",
      "kind": "transparent"
    },
    {
      "address": "0x616262412D9A1Babf5b751bdfcc11f06044a38C3",
      "txHash": "0x23b7ec6a99107c8712c8ed2e8c97bd601a178a19017153fe5b055d36178b4a6f",
      "kind": "transparent"
    },
    {
      "address": "0x3B23f7A799e6e8f4e0A82c7eD4c708332dE5093f",
      "txHash": "0x534110fbb475a093873c51ce790bf7806f34283beb64406b0e5e21e81bcd3a3a",
      "kind": "transparent"
    },
    {
      "address": "0xfD23d1598abE387df51f17b592b9e81c0A8CFDA5",
      "txHash": "0xeff03a23d76fdc2bd0f10021d31ab13fbc0d46e66860fab0e3f781c0ae5cfc2b",
      "kind": "transparent"
    },
    {
      "address": "0xfa6dde9263Cf2e5c542154cc8a9AbD39e6FfDA68",
      "txHash": "0xd42b9f8bff010b9cae4df03e2bf2725f2024b126f083fdd65bef4779f8065153",
      "kind": "transparent"
    },
    {
      "address": "0x3A029Bf68636f82b56FBAD2670bC7E70e2E547C4",
      "txHash": "0x9efdd437347429821977e6ca5fb729a7986d13e1d85dc5e37c6938e29ff4b018",
      "kind": "transparent"
    },
    {
      "address": "0x61A600CB830f5Ed5F24D102411D7Ae42b0c3b248",
      "txHash": "0xbee5128aad111d37f417d00d530229706c41bb0256fb182b3c40ea91cac1fe07",
      "kind": "transparent"
    },
    {
      "address": "0x3BCdCA19d0CAB6Fb408661Fc9135Fd5B41D4f13A",
      "txHash": "0x43a0396207c1e43f6f9595c196c64faea6e62bda40cd6a5c4b973479c59245b8",
      "kind": "transparent"
    },
    {
      "address": "0x73BA8B7FaB9712887b2400e66A36265620c613C8",
      "txHash": "0x90917765d7b3307f3dbb736bfc67561c71c36c49882f1db1888a65c0327b5dd3",
      "kind": "transparent"
    },
    {
      "address": "0x6f633eD4d3fb3D433BD14Fb776D2c4Ba23308A13",
      "txHash": "0x591dc42583b31b176e023524e1a924155b87738ae539984dda56fef3fbb6bc8f",
      "kind": "transparent"
    },
    {
      "address": "0x353476e1A4064e05A378d7f8Bfa07F8e3E9394f8",
      "txHash": "0x0d5f20112de10c90972ace5242b5da774ade8e28bf5987a26cc5815e9ffd77b3",
      "kind": "transparent"
    },
    {
      "address": "0xd62741B6e3fc69a170981f8F54200b3B8ED5274A",
      "txHash": "0x19395d2a4bce84960b8ba4426d25b0dd59e29a7952210172c9c07c210becbd1f",
      "kind": "transparent"
    },
    {
      "address": "0x2D1B22DF4dA028A72009ae4f5d73fe25D1F4F845",
      "txHash": "0x3ca99560934666106d36765e76a1a52f5e958fcacaa79d3c7d3fe4364209491d",
      "kind": "transparent"
    },
    {
      "address": "0xBebDDCdCfE2577c8BfB55dE80D9e6a013D2EaA56",
      "txHash": "0xdc33deeccda14a357670a923fe9f153a5f194b7d3a83ff4609084c6325f193d8",
      "kind": "transparent"
    },
    {
      "address": "0x40C0A04333bc27539FEd9a1A6fE2076a33ebA6C1",
      "txHash": "0x783a110556f65302409cf2a0d94cff4e810ff14fdb7d1433cc7da6a9b3e49517",
      "kind": "transparent"
    },
    {
      "address": "0x361272194DBcA942DE1E114d53F459D48F0BDd73",
      "txHash": "0x49cad28f5d4655da8dbfd5c35385363a2f296c80cd6a76a76efd2257fc356f83",
      "kind": "transparent"
    },
    {
      "address": "0x330419f065CBd013868C2F0B5c059943e9C6A523",
      "txHash": "0x65a9557d0b6bb6bf9cb51a318ce847a3738d19ea54b171e91212b526b51b44cf",
      "kind": "transparent"
    },
    {
      "address": "0x2E899E98DB5FfBd58689C5D1038Cd3b7bfaBFc64",
      "txHash": "0x3fd1e3ebf8ac123972a3d483756580d3627fe7ae7ebae853e1bc44f785286d23",
      "kind": "transparent"
    },
    {
      "address": "0xd36F0b5Dc87C12B6132b6485740d3e6F5cB79596",
      "txHash": "0xd71f7f1ca8560d947390a1abe6f978aabb32d1068c1c171700c4510909c0b8fd",
      "kind": "transparent"
    },
    {
      "address": "0xD9b0E464B34c9A438dd108372c43eAf5491F81c6",
      "txHash": "0x44111a518777b32f2f50c3314743cfa5ad3311d6cfd35156a4c5a791619ba7e0",
      "kind": "transparent"
    },
    {
      "address": "0xc4d18426597C990871824E1b8DC9F2626B355a9C",
      "txHash": "0x298d0ebd5e92fd510f8925198e9d72d2d7a6491953319a27ebfc73abb45b2e4b",
      "kind": "transparent"
    },
    {
      "address": "0xe3b256168336b5C32183732855791e4F24C30E6f",
      "txHash": "0xb8a791980d1733435d1fcc5164e97efa8afe7a46dc1547409cfcbe94ca880372",
      "kind": "transparent"
    },
    {
      "address": "0x1eF6e24D6F3D8c7b571a3414587279B9eFdF33FE",
      "txHash": "0x852842b011dd42637efac2ac8493e28ea6be31b91526672a514ab0c3d6551a0d",
      "kind": "transparent"
    },
    {
      "address": "0xf635b74027e2E9713280b67e4728A88634359063",
      "txHash": "0xc2a2c1e8969be0ba5060f93abe83eb87bf97a5433e21d5702ac6e80d3430906f",
      "kind": "transparent"
    },
    {
      "address": "0x1AA874eA56d085277d20a025806041e93CFBe2Bd",
      "txHash": "0xbefeb63ec1c56ab3707101a1e6a101617dba519820afa8e3c2652c09fa74973d",
      "kind": "transparent"
    },
    {
      "address": "0xFC8a278b65Fe63B56CD45068f69F37dEcDbCe397",
      "txHash": "0x45b7e69bd3bcb87d1713bc543828978a4dbf7fadbc1725974f92a721db1b07a2",
      "kind": "transparent"
    },
    {
      "address": "0xA824071644Bcc8A9030C94FBAFfC3f9563512C5B",
      "txHash": "0x9f637a3a1ba0c789d664a4486a42945a741a9f49fc4ececa526ba064bb563c53",
      "kind": "transparent"
    },
    {
      "address": "0x86C28d1499aBc078D23B1F09c1Dc5f788f5ac069",
      "txHash": "0xaefdbbedad81944ebd291c4abcc1dabd96864b278abd0cea697044ed72304617",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9f2af7d189a389390b8841bc4fe33786801c1b1a1c4a2803ab5729392085f0ad": {
      "address": "0x803489E5991a49CEF8df358C2E287838Dd3Af658",
      "txHash": "0x2884718cfa9fe3b5a18069c646c5a9e94d625422a07338b0db009577e0526a3a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(RoyaltyInfo)2480_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2480_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:195"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2480_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2480_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "1139391721b870d678ce8ad75499651b53edf727af1f5b23021bfeaee8aa1074": {
      "address": "0xeA2e9EbFB4d163c8134f5fb478E67224a719a95E",
      "txHash": "0x3315834cdbb63ea503392ae446e1aa2fd557c443af5513b194e463f8ee9982d1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:29"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IERC20Upgradeable)933",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:34"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:39"
          },
          {
            "label": "totalFundsRaised",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:44"
          },
          {
            "label": "sales",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(SaleInfo)12408_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:49"
          },
          {
            "label": "salesCount",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:223"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)933": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(SaleInfo)12408_storage)": {
            "label": "mapping(uint256 => struct Crowdsale.SaleInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(SaleInfo)12408_storage": {
            "label": "struct Crowdsale.SaleInfo",
            "members": [
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "450b8c1fea4c4cb33b9390a9a05b8cfa2e1f9e8db11468185ee8515b7f0a18fd": {
      "address": "0x748d6885Dd87668D349745538F7F7d5C54f8E0c6",
      "txHash": "0xb59e65975f3917f835e8c63627471e5015f1e3b36e35becee731388b301ca7ea",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:21"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IERC20Upgradeable)933",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:26"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:31"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:36"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:41"
          },
          {
            "label": "fundsRaised",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:46"
          },
          {
            "label": "sold",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "tokenUri",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)43_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:194"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)933": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df038c596c3b2dcb32ea489ad12291041ef1de604c88fad2e729c7eefbe25120": {
      "address": "0x5ACbaCC4Bd71e8Fe786e04De08Ac6FefaC8ee250",
      "txHash": "0x28a80b0dcee6528875dcd162c9d5a1cfeb5027a6611e9e535549ae3a52dec912",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4661_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(RoyaltyInfo)2650_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2650_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:216"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4661_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2650_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4661_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4346_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2650_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)4346_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "53513da11e52a70199f7fdd34f8eb392f527493ffcbb6e3a0e3b0193a2dcd2e8": {
      "address": "0x43262383815e82E88828Ae8602B9C7a12B23e875",
      "txHash": "0xb3e32462cca0e46efbbd399eb20c465e8cd7f3dc3822e8fd81d1cb608680815e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4643_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(RoyaltyInfo)2632_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2632_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:216"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4643_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2632_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4643_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4328_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2632_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)4328_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "9cb238aa4393116c2a0c818c80307125ff47bf30eade44b380c6d258f8f4eb74": {
      "address": "0x81AF0658121611372c87a76f2079485cc450edd2",
      "txHash": "0xfb487a29b21c9db82750a05b6b975f23328cac719b4fa729da9a1b9260929dfb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:37"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IERC20Upgradeable)1103",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:42"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:47"
          },
          {
            "label": "tokenUri",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:52"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Tranche)13098_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:57"
          },
          {
            "label": "currentTranche",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:62"
          },
          {
            "label": "_whitelists",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Whitelist)13087_storage))",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "158",
            "type": "t_array(t_uint256)43_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:410"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1103": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)13087_storage)": {
            "label": "mapping(address => struct Crowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Whitelist)13087_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Crowdsale.Whitelist))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)13098_storage)": {
            "label": "mapping(uint256 => struct Crowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)13098_storage": {
            "label": "struct Crowdsale.Tranche",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "publicSupply",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "publicSold",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "whitelistedSupply",
                "type": "t_uint64",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "whitelistedSold",
                "type": "t_uint64",
                "offset": 24,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Whitelist)13087_storage": {
            "label": "struct Crowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0080cf5c7a35b18416a33bb00211d904b48c00e751c39960ffc2fc9753ae3c5d": {
      "address": "0x21639F50B0c8fBaec1d056c2DA87c08799f62b73",
      "txHash": "0x118f7cc7fb327a468032b58d84761261cb32118c9985dbdf2be3133f6dc1028d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6637_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(RoyaltyInfo)3159_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3159_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:27"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:229"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6637_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3159_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)6637_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6322_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)3159_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)6322_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "5c1172ac62953c124e3c4d98d98d6a4254b5e8a26b74f306cc6d0f5c7a760405": {
      "address": "0x15F9700ac330155569c1961E4B9525973AaA3fC9",
      "txHash": "0xb40586dbad7e9b7e7ce148ad7109ec74b522505b917fdf618c5174d4cd801686",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4424_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(RoyaltyInfo)2487_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2487_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:25"
          },
          {
            "label": "_tokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:207"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4424_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2487_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4424_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4109_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2487_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)4109_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "7fe2fd5cb8519c4f0948b08941a7fa8ec0c53e69c386c3fb4e3bc4939f2484fc": {
      "address": "0xca6aBe00b35CBFF9366CC6086a6F35d5c5fA5ECe",
      "txHash": "0x1a1564c67f0df6dfd503df170f321781ee31df1cbc0da1b88a57c63127bc0c30",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8206_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(RoyaltyInfo)4728_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)4728_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:27"
          },
          {
            "label": "_factor",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:28"
          },
          {
            "label": "_tokenURI",
            "offset": 0,
            "slot": "453",
            "type": "t_string_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)47_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:227"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8206_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)4728_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8206_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7891_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)4728_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)7891_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "50083114b96fdcb9c02d0c20a8337097639232e7d1547b5faeaca32c20b97e31": {
      "address": "0x222C7511F65fe8e96096262340cb33607ba54751",
      "txHash": "0x06d7f683c535c8b81abd484726ea6d76c19400c0c363a5b4df5d7bd18c34d14b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "sourceNft",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "GenesisNFTUpgrader",
            "src": "contracts/migration/GenesisNFTUpgrader.sol:14"
          },
          {
            "label": "targetNft",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "GenesisNFTUpgrader",
            "src": "contracts/migration/GenesisNFTUpgrader.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4c38faa1a2d51ddec1d9f118637047fdaa42d09210f4a86600c3a1d645703394": {
      "address": "0x769BE0Eb8922c54a46B65867D511959075c19131",
      "txHash": "0x27ed246054e7ab9f9ef84e38f3bec0c3bdb39882937852efd1ebe67a75ff6ef9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "rewardPeriod",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:20"
          },
          {
            "label": "smallNft",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC721Upgradeable)4220",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:22"
          },
          {
            "label": "largeNft",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IERC721Upgradeable)4220",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:23"
          },
          {
            "label": "finalTimestamp",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:24"
          },
          {
            "label": "stakedSmallKeys",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:26"
          },
          {
            "label": "stakedSmall",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:27"
          },
          {
            "label": "rewardsSmall",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:28"
          },
          {
            "label": "stakedLargeKeys",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:30"
          },
          {
            "label": "stakedLarge",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:31"
          },
          {
            "label": "rewardsLarge",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721Upgradeable)4220": {
            "label": "contract IERC721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ec77ab609d10e77626bb9b67076211ee6db94da62816cbb7b8bb459067b69e94": {
      "address": "0xB85973cC271B15b0b3A61A6f87F68Fe7E6B9ab97",
      "txHash": "0xb713ef76f3cbabb7978a5ada84646db4db79dfa09d8c72c004c39054fbfc835e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "rewardPeriod",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:20"
          },
          {
            "label": "smallNft",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC721Upgradeable)561",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:22"
          },
          {
            "label": "largeNft",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IERC721Upgradeable)561",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:23"
          },
          {
            "label": "finalTimestamp",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:24"
          },
          {
            "label": "stakedSmallKeys",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:26"
          },
          {
            "label": "stakedSmall",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:27"
          },
          {
            "label": "rewardsSmall",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:28"
          },
          {
            "label": "stakedLargeKeys",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:30"
          },
          {
            "label": "stakedLarge",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:31"
          },
          {
            "label": "rewardsLarge",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721Upgradeable)561": {
            "label": "contract IERC721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c5874d29e8f066b082176e9686c38c204195888ca23763da0b5e3bc2db9bf0c5": {
      "address": "0xaAEf365CE3fc88D15EEe42da156d501f52553fE0",
      "txHash": "0x590805e9f0ad70b6995f48bd47f7dc4a860414b0d700fd0ae78f1e26f9c007f4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "rewardPeriod",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:19"
          },
          {
            "label": "smallNft",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC721Upgradeable)561",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:20"
          },
          {
            "label": "largeNft",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IERC721Upgradeable)561",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:21"
          },
          {
            "label": "finalTimestamp",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:22"
          },
          {
            "label": "stakedSmallKeys",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:24"
          },
          {
            "label": "stakedSmall",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:25"
          },
          {
            "label": "rewardsSmall",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:26"
          },
          {
            "label": "stakedLargeKeys",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:28"
          },
          {
            "label": "stakedLarge",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:29"
          },
          {
            "label": "rewardsLarge",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721Upgradeable)561": {
            "label": "contract IERC721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f1f72b8bfc9eb63ba806dedd357d7dbe4029494b62462407f37831316ac1ce0": {
      "address": "0x02380f9EB9AE94E90D200883fBeC665f26863d57",
      "txHash": "0xe3314593ad05631306ec68c5e32a24b61da93994e5f0c9576e2e1e81023fd8b7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)8206_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(RoyaltyInfo)4728_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)4728_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:27"
          },
          {
            "label": "_tokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:28"
          },
          {
            "label": "_series",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)47_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:227"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)8206_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)4728_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8206_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7891_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)4728_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)7891_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "4f0514d1c19f82c635021a66391ae0cdf4791b3f77e5a07b827fe05a442ff7e5": {
      "address": "0x8f44fd4337acd1214818AC71B27e605E03D09247",
      "txHash": "0xf7582e248a4ecce7c7f95162311cb5c13127083c2dee5cfc0fd34ed60936514c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:35"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IERC20Upgradeable)505",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:40"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:45"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_struct(Tranche)4689_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:50"
          },
          {
            "label": "tranchesCounter",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "_kolWhitelist",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(Whitelist)4701_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:53"
          },
          {
            "label": "_freeMintsWhitelist",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_struct(Whitelist)4701_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "158",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:356"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)4701_storage)": {
            "label": "mapping(address => struct ICrowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)4689_storage)": {
            "label": "mapping(uint256 => struct ICrowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)4689_storage": {
            "label": "struct ICrowdsale.Tranche",
            "members": [
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "kolPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publicPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "freeMintsSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "kolSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "publicSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Whitelist)4701_storage": {
            "label": "struct ICrowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f0793f9ccaaf238af2ca4e735173af744b2f6ecf5b40adb54885329844ef6376": {
      "address": "0x29b2a4C6DdddEE6C85cB83d6947fdb87b05E26bf",
      "txHash": "0xb52e80c4f1d71d873e80829053ef49ee696b4df37e18ee259a7796f83e523825",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "whitelistPhaseDuration",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:22"
          },
          {
            "label": "publicPhaseDuration",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:23"
          },
          {
            "label": "durationBetweenTranches",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:35"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)505",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:40"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:45"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_struct(Tranche)4713_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:50"
          },
          {
            "label": "tranchesCounter",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "_kolWhitelist",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(Whitelist)4725_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:53"
          },
          {
            "label": "_freeMintsWhitelist",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(Whitelist)4725_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:364"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)4725_storage)": {
            "label": "mapping(address => struct ICrowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)4713_storage)": {
            "label": "mapping(uint256 => struct ICrowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)4713_storage": {
            "label": "struct ICrowdsale.Tranche",
            "members": [
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "kolPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publicPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "freeMintsSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "kolSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "publicSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Whitelist)4725_storage": {
            "label": "struct ICrowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "91f31dc6fbb5a9e80dbd5316e362279bdd86d9dff62539db7bf7baf6e65eeb84": {
      "address": "0x58242c5BadB18D432dc9811F22fD529db9670660",
      "txHash": "0x1ed47f97b798adbf3d58117a8cbb9ece2ee7e9a39c86acb3c367aea4b3af396a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "whitelistPhaseDuration",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:22"
          },
          {
            "label": "publicPhaseDuration",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:23"
          },
          {
            "label": "durationBetweenTranches",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:35"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)505",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:40"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:45"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_struct(Tranche)4728_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:50"
          },
          {
            "label": "tranchesCounter",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "_kolWhitelist",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(Whitelist)4742_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:53"
          },
          {
            "label": "_freeMintsWhitelist",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(Whitelist)4742_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:374"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)4742_storage)": {
            "label": "mapping(address => struct ICrowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)4728_storage)": {
            "label": "mapping(uint256 => struct ICrowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)4728_storage": {
            "label": "struct ICrowdsale.Tranche",
            "members": [
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "kolPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publicPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "freeMintsSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "kolSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "publicSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Whitelist)4742_storage": {
            "label": "struct ICrowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0026c250acd4b3b2a6b8d5b8bb03bcfc2da6f752e4f9cddbacc8b6c117cfefc0": {
      "address": "0xAfE9f0B86e5cfb34aBE6190657A50747C4311bF5",
      "txHash": "0xa444f4442ac1b357fb4035b3a093534b629958ab9334ff8ea35e095ca8d706ec",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "whitelistPhaseDuration",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:22"
          },
          {
            "label": "publicPhaseDuration",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:23"
          },
          {
            "label": "durationBetweenTranches",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:35"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)505",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:40"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:45"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_struct(Tranche)4728_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:50"
          },
          {
            "label": "tranchesCounter",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "_kolWhitelist",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(Whitelist)4742_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:53"
          },
          {
            "label": "_freeMintsWhitelist",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(Whitelist)4742_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:374"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)4742_storage)": {
            "label": "mapping(address => struct ICrowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)4728_storage)": {
            "label": "mapping(uint256 => struct ICrowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)4728_storage": {
            "label": "struct ICrowdsale.Tranche",
            "members": [
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "kolPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publicPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "freeMintsSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "kolSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "publicSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Whitelist)4742_storage": {
            "label": "struct ICrowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "94a14cfc496556d90c64ffd7b3ac9f46f61e1f044fab5e2c2fb136bf0b79c5b8": {
      "address": "0x6146ff354775cCaA8f36942AF11c02F394330A2a",
      "txHash": "0x7ff8669e54a39b0b96bf815475c836d46fc8f7e5fa8d0719a6dcf231d837a3e7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "whitelistPhaseDuration",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:22"
          },
          {
            "label": "publicPhaseDuration",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:23"
          },
          {
            "label": "durationBetweenTranches",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:35"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)505",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:40"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:45"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_struct(Tranche)4738_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:50"
          },
          {
            "label": "tranchesCounter",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "_kolWhitelist",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(Whitelist)4752_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:53"
          },
          {
            "label": "_freeMintsWhitelist",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(Whitelist)4752_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:375"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)4752_storage)": {
            "label": "mapping(address => struct ICrowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)4738_storage)": {
            "label": "mapping(uint256 => struct ICrowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)4738_storage": {
            "label": "struct ICrowdsale.Tranche",
            "members": [
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "kolPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publicPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "freeMintsSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "kolSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "publicSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Whitelist)4752_storage": {
            "label": "struct ICrowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "034c5a596266bb129ff3e18ae27c25e3e18a78d6d8a46f0ba6a97b4dcc7253bf": {
      "address": "0xb53D325684FF779f857Cc5dE665F4ba4e08b1877",
      "txHash": "0x8bd2a456e7bed501d24556cd0dbfe2b03c2bd8ef4e15c9cf432f7706dbbe089a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "whitelistPhaseDuration",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:22"
          },
          {
            "label": "publicPhaseDuration",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:23"
          },
          {
            "label": "durationBetweenTranches",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:35"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)505",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:40"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:45"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_struct(Tranche)4730_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:50"
          },
          {
            "label": "tranchesCounter",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "_kolWhitelist",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(Whitelist)4744_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:53"
          },
          {
            "label": "_freeMintsWhitelist",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(Whitelist)4744_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:373"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)4744_storage)": {
            "label": "mapping(address => struct ICrowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)4730_storage)": {
            "label": "mapping(uint256 => struct ICrowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)4730_storage": {
            "label": "struct ICrowdsale.Tranche",
            "members": [
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "kolPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publicPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "freeMintsSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "kolSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "publicSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Whitelist)4744_storage": {
            "label": "struct ICrowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "40187a405b1cb12e284eb99030701b926fef857dbcc1d7fdc52512f1ee26011e": {
      "address": "0xB2730a545Df6a6fc7789945CdCECE37e295DD6be",
      "txHash": "0xadf48a8f7fe0408776ad8639affc67f15f3e94cdc6be03c770ad032e5f6d4277",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "whitelistPhaseDuration",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:22"
          },
          {
            "label": "publicPhaseDuration",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:23"
          },
          {
            "label": "durationBetweenTranches",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:35"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)505",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:40"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:45"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_struct(Tranche)4756_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:50"
          },
          {
            "label": "tranchesCounter",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "_kolWhitelist",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(Whitelist)4770_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:53"
          },
          {
            "label": "_freeMintsWhitelist",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(Whitelist)4770_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:382"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)4770_storage)": {
            "label": "mapping(address => struct ICrowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)4756_storage)": {
            "label": "mapping(uint256 => struct ICrowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)4756_storage": {
            "label": "struct ICrowdsale.Tranche",
            "members": [
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "kolPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publicPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "freeMintsSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "kolSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "publicSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Whitelist)4770_storage": {
            "label": "struct ICrowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7a7c10d6d747cb393253071f2cae3703c915437638ee43c5687dc7283d5b5550": {
      "address": "0xb55ba5c029fa79a01b1df34fB490A717Cc13dE85",
      "txHash": "0x01d3fe19646ae3041adfab814afb0915ecad4a99f16bebf4996f3853305e189a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "whitelistPhaseDuration",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:22"
          },
          {
            "label": "publicPhaseDuration",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:23"
          },
          {
            "label": "durationBetweenTranches",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:35"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)505",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:40"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:45"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_struct(Tranche)4764_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:50"
          },
          {
            "label": "tranchesCounter",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "_kolWhitelist",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(Whitelist)4778_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:53"
          },
          {
            "label": "_freeMintsWhitelist",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(Whitelist)4778_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:386"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)4778_storage)": {
            "label": "mapping(address => struct ICrowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)4764_storage)": {
            "label": "mapping(uint256 => struct ICrowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)4764_storage": {
            "label": "struct ICrowdsale.Tranche",
            "members": [
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "kolPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publicPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "freeMintsSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "kolSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "publicSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Whitelist)4778_storage": {
            "label": "struct ICrowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b04e87061f72377da7aca58fa43f82e92fe9101209dcb139e9e7315694093cfd": {
      "address": "0xb56584090Fd08f3Cd9bc3dDE34C181359f38ACAc",
      "txHash": "0x919586d386121c4acd7bf1abe5a1a969b74551caafb9221845658c0b3f77b987",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "whitelistPhaseDuration",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:22"
          },
          {
            "label": "publicPhaseDuration",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:23"
          },
          {
            "label": "durationBetweenTranches",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:35"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)505",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:40"
          },
          {
            "label": "wallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:45"
          },
          {
            "label": "tranches",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_struct(Tranche)4764_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:50"
          },
          {
            "label": "tranchesCounter",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:51"
          },
          {
            "label": "_kolWhitelist",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_struct(Whitelist)4778_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:53"
          },
          {
            "label": "_freeMintsWhitelist",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(Whitelist)4778_storage)",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)44_storage",
            "contract": "Crowdsale",
            "src": "contracts/Crowdsale.sol:386"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Whitelist)4778_storage)": {
            "label": "mapping(address => struct ICrowdsale.Whitelist)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tranche)4764_storage)": {
            "label": "mapping(uint256 => struct ICrowdsale.Tranche)",
            "numberOfBytes": "32"
          },
          "t_struct(Tranche)4764_storage": {
            "label": "struct ICrowdsale.Tranche",
            "members": [
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "kolPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publicPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "freeMintsSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "kolSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "publicSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Whitelist)4778_storage": {
            "label": "struct ICrowdsale.Whitelist",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contribution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
