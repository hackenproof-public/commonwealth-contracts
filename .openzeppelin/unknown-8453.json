{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0f89994acD35214BE2Fa327759Aad12C23BeDd2F",
    "txHash": "0x7db9bd84d4746bdb19f6006afd2668d99099dc7be05da6c0414723943bf29859"
  },
  "proxies": [
    {
      "address": "0xA9bc2bC53BA0D85FC212b28C662Ba853387e1CA1",
      "txHash": "0x7dd61bc8126bce21b6918c587a13757a181a407931ae1686168c5735bcdebc90",
      "kind": "transparent"
    },
    {
      "address": "0x47E48acD43841fc454fad197e37EcB14f782bA69",
      "txHash": "0x963ba0f201b4550a6d4af7127148c28228990f86c87a3fe01595ac4b903b9dc2",
      "kind": "transparent"
    },
    {
      "address": "0xe8a2f0B7896f59BF1c9bD130De96b305A9B9bF6A",
      "txHash": "0x4eefcc7209c20ed15203774c321d4b585932224f31743cbbb7955f52c6d2601c",
      "kind": "transparent"
    },
    {
      "address": "0x51dA71fCFe737115754aCFBa9A20d4C98aB9c900",
      "txHash": "0x0310c1965df4be423c221a5f5d009a4ae3a652bd1f993395fbfc417c32345d9e",
      "kind": "transparent"
    },
    {
      "address": "0x9Ba8d198B0450Ee50A1f55d6eD7E904e171A0408",
      "txHash": "0x9c3a880ecc61a764011a0418beaa7547bc803102f4d68d87b160192a906cc3cb",
      "kind": "transparent"
    },
    {
      "address": "0xdf11c7B6705E424E8E2F9c0F7da09643E736091C",
      "txHash": "0x77674251534f21a1b0ac5653f214259e51c510e7a87cc01aabd52b8e29d2a035",
      "kind": "transparent"
    },
    {
      "address": "0x0c6E05D0a0852841037634b2137b3608E0578E9b",
      "txHash": "0x47a635433286356d9fdfb6a49ebae8b37a695fc3de98a265f8a3690e000b3bec",
      "kind": "transparent"
    },
    {
      "address": "0xfa33c7e21b88F6DBe524392e92a1229C6C7fe6aD",
      "txHash": "0x7a7ea50a7fbc8e2b761c9941e440449c74485fc6218171f8ce6c502ed00794aa",
      "kind": "transparent"
    },
    {
      "address": "0x7519461fBd96ABB539c770d57f38C2E91f8262AA",
      "txHash": "0x737a19e2d7238d46bfdf109c117aab056a9c4b9986091252c3349987bd19825a",
      "kind": "transparent"
    },
    {
      "address": "0xcA8310e5fC441f9c7e575C64a8d992F455e6b7BF",
      "txHash": "0xf7335567392a1c46e1735d14657531e360e5453f7ed6eab38abf62a3f33f74e9",
      "kind": "transparent"
    },
    {
      "address": "0x7f44155a0E58384dF4919797Cd5689FeeD667F91",
      "txHash": "0xcf254a97f74897c116ae659d4a4dd7896c3c74cb7499042310e9a2823ce6af9f",
      "kind": "transparent"
    },
    {
      "address": "0x7Fd2f60b159920d7Dd4544150CE140890052000d",
      "txHash": "0xea06425c1237729c37b7d9dd8d361f15a8ba88d414c0841b5968c7b27013c618",
      "kind": "transparent"
    },
    {
      "address": "0x34D6aaba93AfEE10fAC35818f9d40FD0F393848E",
      "txHash": "0x957c55f8a702b1e963bb459c9be26d697138de2705217714fe979a70d491cbca",
      "kind": "transparent"
    },
    {
      "address": "0xA02A79793227c368772D934681d84C099c5B8497",
      "txHash": "0x19022d7eb506c3752e8c86779ae924a6d87beaa6835b139e1e902f5cd2b12f1f",
      "kind": "transparent"
    },
    {
      "address": "0xBC9a06cc352e55F2A02e98B4cfAE96eF3dbcE481",
      "txHash": "0x45e3861619bd90b6d9fe17f9bd22851b1974b7e5af22dabf4b5f3931613087fa",
      "kind": "transparent"
    },
    {
      "address": "0xD7E31990883250E53314b15EE555345f04D011E8",
      "txHash": "0xea82597acd04781dac65758a66c209c34a02938c90c70038b74efd1e90929486",
      "kind": "transparent"
    },
    {
      "address": "0x6Cdf60e71611eb91951c8F09c0699d9120f2e7ea",
      "txHash": "0x6922bd783938e5fe8175e03e906692b60db639a276eb4478e7d2f8e733da6131",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1e0833cd9b19012206294870d9776cbbcb9ec5e4b601d4b8385349aeaaa1d082": {
      "address": "0x4d100d778f21B56C85Ef6F675BF4Baf184e1513a",
      "txHash": "0x9978bb6012535339ca36c0a2b4044446f0b42e69411ab1347fc538ff669fdc9c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_funds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentFundRegistry",
            "src": "contracts\\InvestmentFundRegistry.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)49_storage",
            "contract": "InvestmentFundRegistry",
            "src": "contracts\\InvestmentFundRegistry.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9f884058786757a4286fa127cf87713291914822f27f128a4d9ba5ec831529c8": {
      "address": "0xF77359b2E26Ff1Cae76AbEf1714B5eE460329af3",
      "txHash": "0x11c4838b5561d8ccc3140fb2f26d97f550efdc29c558ca76c920daf91f33c43d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(RoyaltyInfo)13276_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\common\\ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\common\\ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\common\\ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "tokenValue",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:45"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "502",
            "type": "t_struct(Counter)15168_storage",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:47"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "503",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:48"
          },
          {
            "label": "_investors",
            "offset": 0,
            "slot": "504",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:50"
          },
          {
            "label": "_accountValueHistory",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_address,t_struct(History)13759_storage)",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:51"
          },
          {
            "label": "_totalValueHistory",
            "offset": 0,
            "slot": "507",
            "type": "t_struct(History)13759_storage",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "508",
            "type": "t_array(t_uint256)44_storage",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:321"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)13764_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)13759_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)13764_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)13759_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)13764_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoyaltyInfo)13276_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "a051f73e7e376e6008adc006d8bdd5cd4ab9befeaaa13e86192bafdfc43c7ce4": {
      "address": "0xDC1A96bb816399ab6d971B2ad4422160C967B02f",
      "txHash": "0x502cf3836b3751b8796348dcc0bfcc05b620ca6adf559962a410bbfa5d396374",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "currentState",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "StateMachine",
            "src": "contracts\\StateMachine.sol:13"
          },
          {
            "label": "functionsAllowed",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))",
            "contract": "StateMachine",
            "src": "contracts\\StateMachine.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StateMachine",
            "src": "contracts\\StateMachine.sol:45"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "s_managementFee",
            "offset": 0,
            "slot": "351",
            "type": "t_uint16",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:63"
          },
          {
            "label": "s_investmentNft",
            "offset": 2,
            "slot": "351",
            "type": "t_contract(IInvestmentNFT)6009",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:68"
          },
          {
            "label": "s_stakingWlth",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IStakingWlth)6336",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:73"
          },
          {
            "label": "s_unlocker",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:78"
          },
          {
            "label": "s_currency",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:83"
          },
          {
            "label": "s_treasuryWallet",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:88"
          },
          {
            "label": "s_genesisNftRevenue",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:93"
          },
          {
            "label": "s_lpPoolAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:98"
          },
          {
            "label": "s_burnAddress",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:103"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:108"
          },
          {
            "label": "s_totalIncome",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:113"
          },
          {
            "label": "s_nextPayoutToUnlock",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:118"
          },
          {
            "label": "s_maxPercentageWalletInvestmentLimit",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:123"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "363",
            "type": "t_string_storage",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:128"
          },
          {
            "label": "s_cap",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:133"
          },
          {
            "label": "s_payouts",
            "offset": 0,
            "slot": "365",
            "type": "t_array(t_struct(Payout)5541_storage)dyn_storage",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:138"
          },
          {
            "label": "s_userTotalWithdrawal",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:143"
          },
          {
            "label": "s_userNextPayout",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:148"
          },
          {
            "label": "s_projects",
            "offset": 0,
            "slot": "368",
            "type": "t_struct(AddressSet)2298_storage",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:153"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_uint256)48_storage",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:757"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Payout)5541_storage)dyn_storage": {
            "label": "struct IInvestmentFund.Payout[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IInvestmentNFT)6009": {
            "label": "contract IInvestmentNFT",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingWlth)6336": {
            "label": "contract IStakingWlth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes4 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2298_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1983_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Block)5531_storage": {
            "label": "struct IInvestmentFund.Block",
            "members": [
              {
                "label": "number",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Payout)5541_storage": {
            "label": "struct IInvestmentFund.Payout",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blockData",
                "type": "t_struct(Block)5531_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inProfit",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "locked",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)1983_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "024bd943449109c78a9d8da4963ea1d1f937312851f5d48b92faf75a9b477f10": {
      "address": "0xd8410282089372aDf687780d84982fEC241439ab",
      "txHash": "0x2153baf26764062fec1ae294bbeb05185de49d2a82abba6077b52d55ca581f4c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(RoyaltyInfo)13276_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\common\\ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\common\\ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\common\\ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "s_owner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts\\GenesisNFT.sol:31"
          },
          {
            "label": "s_tokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "GenesisNFT",
            "src": "contracts\\GenesisNFT.sol:32"
          },
          {
            "label": "s_series",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts\\GenesisNFT.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GenesisNFT",
            "src": "contracts\\GenesisNFT.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)7809_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)13276_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "f093039e3e805b41fefa1cd57348b5daf3a39b40bc294e118c5e4e19a127ba59": {
      "address": "0x437608AB7a29841BCF51079322429cE25d1f1e81",
      "txHash": "0xecc96ae68c4ca417aa88001d833421cda875e70ccbe7f1e463be43690fe1192d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(RoyaltyInfo)13276_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "minimumValue",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:44"
          },
          {
            "label": "tokenValue",
            "offset": 0,
            "slot": "502",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:49"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "503",
            "type": "t_struct(Counter)15168_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:51"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:52"
          },
          {
            "label": "_investors",
            "offset": 0,
            "slot": "505",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:54"
          },
          {
            "label": "_accountValueHistory",
            "offset": 0,
            "slot": "507",
            "type": "t_mapping(t_address,t_struct(History)13759_storage)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:55"
          },
          {
            "label": "_totalValueHistory",
            "offset": 0,
            "slot": "508",
            "type": "t_struct(History)13759_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "509",
            "type": "t_array(t_uint256)44_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:328"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)13764_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)13759_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)13764_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)13759_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)13764_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoyaltyInfo)13276_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "6ca09c028ed7c599b9c51df23a6f7b3970862d895647941eeee99648331988d0": {
      "address": "0x3a4331F9bD4957D911D94C55dF90De403A0B8DCB",
      "txHash": "0x6a6283452dd296c6c41f459135dc505ebd94bc2afca8ee5fd2c78282d8fea350",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "currentState",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:13"
          },
          {
            "label": "functionsAllowed",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:45"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "s_managementFee",
            "offset": 0,
            "slot": "351",
            "type": "t_uint16",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:63"
          },
          {
            "label": "s_investmentNft",
            "offset": 2,
            "slot": "351",
            "type": "t_contract(IInvestmentNFT)41233",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:68"
          },
          {
            "label": "s_stakingWlth",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IStakingWlth)42031",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:73"
          },
          {
            "label": "s_unlocker",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:78"
          },
          {
            "label": "s_currency",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:83"
          },
          {
            "label": "s_treasuryWallet",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:88"
          },
          {
            "label": "s_genesisNftRevenue",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:93"
          },
          {
            "label": "s_lpPoolAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:98"
          },
          {
            "label": "s_burnAddress",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:103"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:108"
          },
          {
            "label": "s_totalIncome",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:113"
          },
          {
            "label": "s_nextPayoutToUnlock",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:118"
          },
          {
            "label": "s_maxPercentageWalletInvestmentLimit",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:123"
          },
          {
            "label": "s_minimumInvestment",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:128"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "364",
            "type": "t_string_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:133"
          },
          {
            "label": "s_cap",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:138"
          },
          {
            "label": "s_payouts",
            "offset": 0,
            "slot": "366",
            "type": "t_array(t_struct(Payout)40277_storage)dyn_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:143"
          },
          {
            "label": "s_userTotalWithdrawal",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:148"
          },
          {
            "label": "s_userNextPayout",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:153"
          },
          {
            "label": "s_projects",
            "offset": 0,
            "slot": "369",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:158"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_uint256)48_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:792"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Payout)40277_storage)dyn_storage": {
            "label": "struct IInvestmentFund.Payout[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IInvestmentNFT)41233": {
            "label": "contract IInvestmentNFT",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingWlth)42031": {
            "label": "contract IStakingWlth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes4 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Block)40267_storage": {
            "label": "struct IInvestmentFund.Block",
            "members": [
              {
                "label": "number",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Payout)40277_storage": {
            "label": "struct IInvestmentFund.Payout",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blockData",
                "type": "t_struct(Block)40267_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inProfit",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "locked",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "196100981f0872514134bd87aa5266b63d15d56d38a78a273c8a3b68e674fd67": {
      "address": "0xf422F1E99E899E2Ba419F57283F89489582D4C97",
      "txHash": "0xf4b8343e7fc54236681a751219bdfcdcd6e01a2460a78e02e82f0a80ad590764",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(RoyaltyInfo)13276_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "minimumValue",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:47"
          },
          {
            "label": "tokenValue",
            "offset": 0,
            "slot": "502",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:52"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "503",
            "type": "t_struct(Counter)15168_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:54"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:55"
          },
          {
            "label": "_investors",
            "offset": 0,
            "slot": "505",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:57"
          },
          {
            "label": "_accountValueHistory",
            "offset": 0,
            "slot": "507",
            "type": "t_mapping(t_address,t_struct(History)13759_storage)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:58"
          },
          {
            "label": "_totalValueHistory",
            "offset": 0,
            "slot": "508",
            "type": "t_struct(History)13759_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:59"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "509",
            "type": "t_struct(Metadata)41106_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)40_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:460"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)13764_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)13759_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)13764_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)13759_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)13764_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Metadata)41106_storage": {
            "label": "struct IInvestmentNFT.Metadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "externalUrl",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoyaltyInfo)13276_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "7e3237d56abb903a43b3bbcf42132b3798ce553147ba9c2bae24c1f994fd3643": {
      "address": "0x1Bc28042baF0213e19ddeee9196c1af554278011",
      "txHash": "0x7c6667d250ffbe5c310731dec7dc0f15151f73ecf33c545d684db2a1edaf604d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "currentState",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:13"
          },
          {
            "label": "functionsAllowed",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:45"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "s_managementFee",
            "offset": 0,
            "slot": "351",
            "type": "t_uint16",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:63"
          },
          {
            "label": "s_investmentNft",
            "offset": 2,
            "slot": "351",
            "type": "t_contract(IInvestmentNFT)41295",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:68"
          },
          {
            "label": "s_stakingWlth",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IStakingWlth)41965",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:73"
          },
          {
            "label": "s_unlocker",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:78"
          },
          {
            "label": "s_currency",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:83"
          },
          {
            "label": "s_treasuryWallet",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:88"
          },
          {
            "label": "s_genesisNftRevenue",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:93"
          },
          {
            "label": "s_lpPoolAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:98"
          },
          {
            "label": "s_burnAddress",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:103"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:108"
          },
          {
            "label": "s_totalIncome",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:113"
          },
          {
            "label": "s_nextPayoutToUnlock",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:118"
          },
          {
            "label": "s_maxPercentageWalletInvestmentLimit",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:123"
          },
          {
            "label": "s_minimumInvestment",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:128"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "364",
            "type": "t_string_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:133"
          },
          {
            "label": "s_cap",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:138"
          },
          {
            "label": "s_payouts",
            "offset": 0,
            "slot": "366",
            "type": "t_array(t_struct(Payout)40686_storage)dyn_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:143"
          },
          {
            "label": "s_userTotalWithdrawal",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:148"
          },
          {
            "label": "s_userNextPayout",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:153"
          },
          {
            "label": "s_projects",
            "offset": 0,
            "slot": "369",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:158"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_uint256)48_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:792"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Payout)40686_storage)dyn_storage": {
            "label": "struct IInvestmentFund.Payout[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IInvestmentNFT)41295": {
            "label": "contract IInvestmentNFT",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingWlth)41965": {
            "label": "contract IStakingWlth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes4 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Block)40676_storage": {
            "label": "struct IInvestmentFund.Block",
            "members": [
              {
                "label": "number",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Payout)40686_storage": {
            "label": "struct IInvestmentFund.Payout",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blockData",
                "type": "t_struct(Block)40676_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inProfit",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "locked",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "69b9530761e283c20bf421645a83c612c25a0671633a2ca7a89a2e4a69043ede": {
      "address": "0x804a1E115685F465937664a55ccCB82DC585dD4B",
      "txHash": "0xf9ce46a6690bfceb55e3f8c07d221e413be6c5bbc94cc21fb5962c0acd9eda59",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(RoyaltyInfo)13276_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "tokenValue",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:47"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "502",
            "type": "t_struct(Counter)15168_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:49"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "503",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:50"
          },
          {
            "label": "_investors",
            "offset": 0,
            "slot": "504",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:52"
          },
          {
            "label": "_accountValueHistory",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_address,t_struct(History)13759_storage)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:53"
          },
          {
            "label": "_totalValueHistory",
            "offset": 0,
            "slot": "507",
            "type": "t_struct(History)13759_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:54"
          },
          {
            "label": "minimumValue",
            "offset": 0,
            "slot": "508",
            "type": "t_uint256",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:59"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "509",
            "type": "t_struct(Metadata)41106_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)39_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:460"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)13764_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]",
            "numberOfBytes": "1248"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)13759_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)13764_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)13759_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)13764_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Metadata)41106_storage": {
            "label": "struct IInvestmentNFT.Metadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "externalUrl",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoyaltyInfo)13276_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "f7f615df07d8ac1ebf48aa3b893cd81c455f25b3c0d10bc613f8b3a8dc0868fd": {
      "address": "0x65Cbf7AA0C40f8e8ff75ee475052CFe75450c133",
      "txHash": "0xf143a26db645586c1ed1970dbfd9d93c56eaddfe717b80a66d5a8be68bf28eda",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_observationTime",
            "offset": 0,
            "slot": "201",
            "type": "t_uint32",
            "contract": "UniswapWlthPriceOracle",
            "src": "contracts/UniswapWlthPriceOracle.sol:19"
          },
          {
            "label": "s_wlth",
            "offset": 4,
            "slot": "201",
            "type": "t_address",
            "contract": "UniswapWlthPriceOracle",
            "src": "contracts/UniswapWlthPriceOracle.sol:24"
          },
          {
            "label": "s_usdc",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "UniswapWlthPriceOracle",
            "src": "contracts/UniswapWlthPriceOracle.sol:29"
          },
          {
            "label": "s_pool",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "UniswapWlthPriceOracle",
            "src": "contracts/UniswapWlthPriceOracle.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UniswapWlthPriceOracle",
            "src": "contracts/UniswapWlthPriceOracle.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ebd288b21f852fe914fba93f8d8fadfc3ce28b3c990fe3e3078627553750f560": {
      "address": "0x22f93A8baeCA64c60AA203BD57Bc74d3A53CdfEa",
      "txHash": "0x0dd2bc88373c357deee3111d8d16afd1c8d3e3e32d4bb62b7a328aad5811258f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:48"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:49"
          },
          {
            "label": "transactionFee",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:50"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:51"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:52"
          },
          {
            "label": "maxDiscount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:53"
          },
          {
            "label": "uniswapWlthPrice",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IUniswapWlthPrice)42709",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:54"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)15168_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:55"
          },
          {
            "label": "stakingPositions",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(Position)42324_storage)",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:57"
          },
          {
            "label": "stakesPerAccount",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:58"
          },
          {
            "label": "durationCoefficients",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(UintToUintMap)18119_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:59"
          },
          {
            "label": "registeredFunds",
            "offset": 0,
            "slot": "264",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:60"
          },
          {
            "label": "stakingAccounts",
            "offset": 0,
            "slot": "266",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_uint256)38_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:1245"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]",
            "numberOfBytes": "1216"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUniswapWlthPrice)42709": {
            "label": "contract IUniswapWlthPrice",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)42324_storage)": {
            "label": "mapping(uint256 => struct IStakingWlth.Position)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32Set)19200_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)17889_storage": {
            "label": "struct EnumerableMapUpgradeable.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)19200_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Period)42304_storage": {
            "label": "struct IStakingWlth.Period",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)42324_storage": {
            "label": "struct IStakingWlth.Position",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fund",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amountInWlth",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountInUsdc",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "investment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "period",
                "type": "t_struct(Period)42304_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isCRP",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakedEnded",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToUintMap)18119_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)17889_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "49a06413af47dac99c300c9b854a22c93201fb54c37c65183d6576d2a15f09ee": {
      "address": "0xd05F0aa2d4860Fe7121f5B0ba9f12f464c433A62",
      "txHash": "0x661c92b7a6ef22469bb03cabde0b7bf2e1e9d5ac667ea10c59b074c790afdc41",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:45"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:50"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:55"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:60"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:65"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:70"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:75"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:80"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:85"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:90"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:95"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:100"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:105"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:110"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:115"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:120"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:125"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:591"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "550b88dc7d8c6596bb67e43df3c4e7e24b4b31700d71aeafd1cf0160aab1883d": {
      "address": "0xc1fAd7fc5bf9e6759dc0D8D26da7EA99Db0D6905",
      "txHash": "0xe0ef0cbabb3c8e6e83a67ccc524a8d67da7ec1212d8bc55350b72d13a610d31f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:45"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:50"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:55"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:60"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:65"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:70"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:75"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:80"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:85"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:90"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:95"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:100"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:105"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:110"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:115"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:120"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:125"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:599"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b586e568276f5fc01e4e879546dad8874e9a9e45e992ead3ddd0927d37d4cc5e": {
      "address": "0xe7c45485ADBb2E23f29940038aC2FE6C7A6DAbcD",
      "txHash": "0x5ce32a1fad009a950f23b7c80a84a99139ff78b4230796508c72cabbee155cd3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_wlth",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:28"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:33"
          },
          {
            "label": "s_stakingStartTimestamp",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:38"
          },
          {
            "label": "s_stakingEndTimestamp",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:43"
          },
          {
            "label": "s_stakingDuration",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:48"
          },
          {
            "label": "s_totalReward",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:53"
          },
          {
            "label": "s_totalStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:58"
          },
          {
            "label": "s_stakes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:63"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:299"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23ad87b7b6d5f8924abf93e4caa4d7fc32a148bf1737a8975dfc37b561034632": {
      "address": "0x2Bd89A62F3ea3F11690Bed76Cd8E6558b1326F97",
      "txHash": "0x7a36d0b1d5263052ae2856bff3ba06e5f38e9384ebbe1c75cf48421eec80238d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_wlth",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:28"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:33"
          },
          {
            "label": "s_stakingStartTimestamp",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:38"
          },
          {
            "label": "s_stakingEndTimestamp",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:43"
          },
          {
            "label": "s_stakingDuration",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:48"
          },
          {
            "label": "s_totalReward",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:53"
          },
          {
            "label": "s_totalStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:58"
          },
          {
            "label": "s_stakes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:63"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WlthBonusStaking",
            "src": "contracts/WlthBonusStaking.sol:301"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "68309894a8b6acab3002e78214e65eaf0d9918e2730b1addd22052f5f1a24deb": {
      "address": "0x1b3c0208A0e24972460210620355198782ACa09D",
      "txHash": "0xe55e6a3a0e6c23e9c50a1bc15c710b21f90851f086a5d10ea11b19257bdbfcf5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:45"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:50"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:55"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:60"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:65"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:70"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:75"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:80"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:85"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:90"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:95"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:100"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:105"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:110"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:115"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:120"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:125"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:650"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d647ab08bf6ee6d1d54314cc60fedb38d89f73910f9fc4fb152fd9ae21afd01e": {
      "address": "0xE6651cCf1C334D5176af95888d12a34333C415d7",
      "txHash": "0xdfcceec6b8d5fbba3ef81e6f8aa0a59953f07ceafd281326dd22aaa7f8ea7402",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "currentState",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:13"
          },
          {
            "label": "functionsAllowed",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:45"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "s_managementFee",
            "offset": 0,
            "slot": "351",
            "type": "t_uint16",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:65"
          },
          {
            "label": "s_investmentNft",
            "offset": 2,
            "slot": "351",
            "type": "t_contract(IInvestmentNFT)43535",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:70"
          },
          {
            "label": "s_stakingWlth",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IStakingWlth)44273",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:75"
          },
          {
            "label": "s_unlocker",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:80"
          },
          {
            "label": "s_currency",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:85"
          },
          {
            "label": "s_treasuryWallet",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:90"
          },
          {
            "label": "s_genesisNftRevenue",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:95"
          },
          {
            "label": "s_lpPoolAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:100"
          },
          {
            "label": "s_burnAddress",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:105"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:110"
          },
          {
            "label": "s_totalIncome",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:115"
          },
          {
            "label": "s_nextPayoutToUnlock",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:120"
          },
          {
            "label": "s_maxPercentageWalletInvestmentLimit",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:125"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "363",
            "type": "t_string_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:130"
          },
          {
            "label": "s_cap",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:135"
          },
          {
            "label": "s_payouts",
            "offset": 0,
            "slot": "365",
            "type": "t_array(t_struct(Payout)42905_storage)dyn_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:140"
          },
          {
            "label": "s_userTotalWithdrawal",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:145"
          },
          {
            "label": "s_userNextPayout",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:150"
          },
          {
            "label": "s_projects",
            "offset": 0,
            "slot": "368",
            "type": "t_struct(AddressSet)19389_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:155"
          },
          {
            "label": "s_minimumInvestment",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:160"
          },
          {
            "label": "s_profitProvider",
            "offset": 0,
            "slot": "371",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:165"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_uint256)46_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:843"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Payout)42905_storage)dyn_storage": {
            "label": "struct IInvestmentFund.Payout[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IInvestmentNFT)43535": {
            "label": "contract IInvestmentNFT",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingWlth)44273": {
            "label": "contract IStakingWlth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes4 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19389_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19074_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Block)42895_storage": {
            "label": "struct IInvestmentFund.Block",
            "members": [
              {
                "label": "number",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Payout)42905_storage": {
            "label": "struct IInvestmentFund.Payout",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blockData",
                "type": "t_struct(Block)42895_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inProfit",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "locked",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)19074_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3ec10075fce950d31ad7c1b341b5c731dbb01eba6985274029ff140f6d60cf64": {
      "address": "0xD37AE78248DEb85C68f44eAC34E35A23e43A80F0",
      "txHash": "0x6f2edca82e591f562fabf1340aeb5c2b53e1a7d66778efff9c3a499ada1c5431",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_fund",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IInvestmentFund)2450",
            "contract": "ProfitProvider",
            "src": "contracts/ProfitProvider.sol:23"
          },
          {
            "label": "s_currency",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20)899",
            "contract": "ProfitProvider",
            "src": "contracts/ProfitProvider.sol:28"
          },
          {
            "label": "s_minimumProfit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ProfitProvider",
            "src": "contracts/ProfitProvider.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)899": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IInvestmentFund)2450": {
            "label": "contract IInvestmentFund",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a2344c0e29dc943ed462f57869cd8c1dbbbc5ea12d0cd7b64c568e06f403ed18": {
      "address": "0xF37C1DfE66e6aA1A4c0Ed10A0C0b8bE76dD38CDe",
      "txHash": "0x967ee753650f1f52d4b43b4acd53397511b5d8ed514eb7727de890e14fefceb2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_fund",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IInvestmentFund)43292",
            "contract": "ProfitProvider",
            "src": "contracts/ProfitProvider.sol:23"
          },
          {
            "label": "s_currency",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20)21553",
            "contract": "ProfitProvider",
            "src": "contracts/ProfitProvider.sol:28"
          },
          {
            "label": "s_minimumProfit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ProfitProvider",
            "src": "contracts/ProfitProvider.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)21553": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IInvestmentFund)43292": {
            "label": "contract IInvestmentFund",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9ed944f9752c9dda72b8c6a1b5a072fd4d132c779fe7f055d2a9abf6bdf98c82": {
      "address": "0xf2Ea850891fBB19b1B4f84aab04eC68E4e6EFB94",
      "txHash": "0xd7cc1f83a9c08d72dc90f6585c7204bb33fc05d88d372897934e7e9964ce79c2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:46"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:51"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:56"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:61"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:66"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:71"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:76"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:81"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:86"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:91"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:96"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:101"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:106"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:111"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:116"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:121"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:126"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:651"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0841b55ba73e3b6b952d2440a0f778112e09f65d0c39669b52d39ebaea91273c": {
      "address": "0xc47FF82d8daAc2759E952Ed82edb70399397a91a",
      "txHash": "0xd24ac261be3965c74d10d6cee589e551c6980786b574156a2d962a375f8777fd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:46"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:51"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:56"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:61"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:66"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:71"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:76"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:81"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:86"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:91"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:96"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:101"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:106"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:111"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:116"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:121"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:126"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:651"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d70f6cce313f8a79fca3829a8b10aa246ca6aaaa939dc0d051119cb8d6ce951c": {
      "address": "0x17B9d297396D884Da9DF670d53f132F46D520214",
      "txHash": "0x9e0c642c20f0cfa8ef71bfa4b6c96bbfe2f190a547ae2c2c53d385c0218055c4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:46"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:51"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:56"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:61"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:66"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:71"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:76"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:81"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:86"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:91"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:96"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:101"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:106"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:111"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:116"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:121"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:126"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:651"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "58bf392df1bbf5b4100e0a694cc7e004a8d8b07503a38c824b632c751742c389": {
      "address": "0xeaab7787711A42aB25aB0B0C0901E1CF90Cfd3ca",
      "txHash": "0xaa793c54a671bb6f3b3171c6e85d23ccb940d7ecb1540750778fe8a58587f070",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:46"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:51"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:56"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:61"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:66"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:71"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:76"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:81"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:86"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:91"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:96"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:101"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:106"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:111"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:116"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:121"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:126"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:651"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f782bf3c7641a102871320b04cf67a52e9d631ddf651e669bae70846d8409a71": {
      "address": "0x061287F6a8c3d3E6D9Ec21bd243c0008c37eA0FA",
      "txHash": "0x2930e4145a2293c99b9fe37bc7f9640f7295f1aa8eeb967e681f9471d0c4f390",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:46"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:51"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:56"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:61"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:66"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:71"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:76"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:81"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:86"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:91"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:96"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:101"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:106"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:111"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:116"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:121"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:126"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:651"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f4f4744f86155b6a9fbb9bfc3c7160f73573cdf55f358f1f0f98920299eb8a19": {
      "address": "0x7Aa01126Bb0F2b678AAf1919c61A87834D28632D",
      "txHash": "0x2a5a1d4802e0b8118e82818771233b20d582e2e23f20efdc119bd9eaea88a799",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:46"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:51"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:56"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:61"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:66"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:71"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:76"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:81"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:86"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:91"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:96"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:101"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:106"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:111"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:116"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:121"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:126"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:652"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3e00964a7cb0b77fb5f7019caf6e7fcb443a2afe13c0e47e916124368016e2b6": {
      "address": "0xbBc15a08b7C170226726Ac79A58B850039E8d519",
      "txHash": "0xa13faaac235e29fc5c39307c06961f43c98d4982497fce21e3d5be90eaee3e9f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:46"
          },
          {
            "label": "s_gamification",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:46"
          },
          {
            "label": "s_wlth",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:51"
          },
          {
            "label": "s_communityFund",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:56"
          },
          {
            "label": "s_cadenceAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:61"
          },
          {
            "label": "s_leftoversUnlockDelay",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:66"
          },
          {
            "label": "s_allocation",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:71"
          },
          {
            "label": "s_duration",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:76"
          },
          {
            "label": "s_cadence",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:81"
          },
          {
            "label": "s_vestingStartTimestamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:86"
          },
          {
            "label": "s_whitelistedAddressesAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:91"
          },
          {
            "label": "s_totalWalletsAllocation",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:96"
          },
          {
            "label": "s_released",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:101"
          },
          {
            "label": "s_tokenReleaseDistribution",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:106"
          },
          {
            "label": "s_cadenceAllocation",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:111"
          },
          {
            "label": "s_whitelistedWalletReleased",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:116"
          },
          {
            "label": "s_distribution",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:121"
          },
          {
            "label": "s_claimedWithPenalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:126"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistedVesting",
            "src": "contracts\\tge\\WhitelistedVesting.sol:651"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "72a35b68a925781183457560640aedee1ee96cebfb426f58b953e3ca215d9e93": {
      "address": "0xFaB5517b03117FD1AF76301cdd319A08E9B0ECf8",
      "txHash": "0x1062a7e3f23dd8d95e0c7cc9426e97ff3f780c1d374885344b91525fe5b7cf0f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7877_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)19389_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(RoyaltyInfo)13344_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)13344_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "s_owner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:35"
          },
          {
            "label": "s_tokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:36"
          },
          {
            "label": "s_series",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:37"
          },
          {
            "label": "token_allocation",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:38"
          },
          {
            "label": "series1",
            "offset": 0,
            "slot": "455",
            "type": "t_bool",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:39"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(Metadata)42508_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:41"
          },
          {
            "label": "metadataImages",
            "offset": 0,
            "slot": "461",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:42"
          },
          {
            "label": "genesisNFTVesting",
            "offset": 0,
            "slot": "462",
            "type": "t_contract(IGenesisNFTVesting)43294",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "463",
            "type": "t_array(t_uint256)39_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:465"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]",
            "numberOfBytes": "1248"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IGenesisNFTVesting)43294": {
            "label": "contract IGenesisNFTVesting",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)19389_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7877_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)13344_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19389_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19074_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Metadata)42508_storage": {
            "label": "struct IGenesisNFT.Metadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "externalUrl",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "id",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "percentage",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)7877_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)13344_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19074_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
