{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x606df4A2A3143edd877Bf2faD66A8DDCEC786BF0",
    "txHash": "0x69d6c71014c98da7a11c9dec67eb075ba69bf096392e82f063430520b3585c84"
  },
  "proxies": [
    {
      "address": "0xBa0cc5270A330368b59E5afb9813Cc097E7Cb8DA",
      "txHash": "0xf0d45b09a52c3b07a563b5c9373476566bbe95667a570cab22de1f71cfa142a0",
      "kind": "transparent"
    },
    {
      "address": "0x0F66eA94F9B0f01abba32DfB85A237dA0F385ed8",
      "txHash": "0x24707dc4ad93ce73da708c9e7df52a7bf3578327316df4ed246ed1686a8a3f5e",
      "kind": "transparent"
    },
    {
      "address": "0xd6C76F87Cc8da9Bdd0406134b56f07aa2bcFFD27",
      "txHash": "0x3263a49ca14dbb5e69309e784516d74c8aa0497c79f52b90e016da5c0e3eb823",
      "kind": "transparent"
    },
    {
      "address": "0xda48fe33F6B5FaBc3AE9F3770741d46D1816873C",
      "txHash": "0x7e9ed69a97789d1fc7d28f76f1c08ed91311c39307bba88686a89459746ce13a",
      "kind": "transparent"
    },
    {
      "address": "0x527Cb7bb76eCEE076384CFd9FC82061b515cc2B8",
      "txHash": "0x36240af114a862faaad3fff567ac3f7ee1ff5d8c19868bd5c1051cb33f12c203",
      "kind": "transparent"
    },
    {
      "address": "0x3db904648566f67A26131FAEa044403B44074a1E",
      "txHash": "0xcb67ff6122d1320acfed45b456c0451130640d05506f24dc6da7c2cb1a56c12b",
      "kind": "transparent"
    },
    {
      "address": "0x7A4068A84c651938EBa4Bc081159f28047ebCbA2",
      "txHash": "0x9a8f22a160fe682989d7455fb59835ad7688fc5b8f0e24cd5d70db503d30f4c9",
      "kind": "transparent"
    },
    {
      "address": "0xea721964DeCa21345E2471b9D2A6f2Ee06C04FF8",
      "txHash": "0x8ddfd48f452eca59ab7918f1b193c9cd3216ef236ed425a0a9f89a0b44acfd02",
      "kind": "transparent"
    },
    {
      "address": "0xC1720f91aA11f4BCDBe9e657A4850a1ab1D7d818",
      "txHash": "0xadaec13cea32867bb3e58dbc24d2f4285fdd1eabaf10e72006a164aef988c295",
      "kind": "transparent"
    },
    {
      "address": "0x18921C5bd7137eF0761909ea39FF7B6dC9A89405",
      "txHash": "0xafc58dcc6599cf6174657e760e101a951c3339a010c35e62dd366bbcafbec32c",
      "kind": "transparent"
    },
    {
      "address": "0x18F02E68766A87143B0BC2C2F240909D9B75aca4",
      "txHash": "0xb3e02989da998012b603a4d72a708632b5f3095d90579085a74581152afe182b",
      "kind": "transparent"
    },
    {
      "address": "0x0f1D32FBDB3d9c7f9804D3E738432b12C5B66cf1",
      "txHash": "0x679aa7ce77d3f09257132c880d5bf92034eb85d024484317c682f2520c35cd38",
      "kind": "transparent"
    },
    {
      "address": "0xFaC4996759C3F5ffe6B2E1FD6Cbb6Bd78E696307",
      "txHash": "0x6655594c8141e02952acd2fb112483231e7eabe01373e51550d87d2060626ff9",
      "kind": "transparent"
    },
    {
      "address": "0xd3ddFc55A230E840449de52c55Df7582A6338A53",
      "txHash": "0xb6dcbb0d80bceaed39fcecf736fc72be2abe499229493646b05b7bed3b1e1c25",
      "kind": "transparent"
    },
    {
      "address": "0xE25DdCa1734bCc01c68D0773962a2BEC1fcFf958",
      "txHash": "0xbd3be87535d176b8cf492c2d721c3150f58b600405bd77248b4d824b67ccbba7",
      "kind": "transparent"
    },
    {
      "address": "0xE356CAd6A240749F611AdadcA9d62F76B6473c01",
      "txHash": "0x6ddbe4a2e237e36967c1be459b3b8517e22376d5655042c0c9c440e35e8ea837",
      "kind": "transparent"
    },
    {
      "address": "0xe1A8EE97C5907B42e3187672B8cEEea1A7d8932c",
      "txHash": "0xda203173d35dd0f8621740c8155deff7a7bba14a9026cbe95f208cea239a82d2",
      "kind": "transparent"
    },
    {
      "address": "0x6E9E9BEf3eA4AfeA0b1745284046B501CCcce9D8",
      "txHash": "0x6d822ce7fb5c752bb634e0df04284cff9b6c995930eccac626d9806a13645ab4",
      "kind": "transparent"
    },
    {
      "address": "0x4234D8a448AddD01c34467A8fB8E2d3127bE5a4B",
      "txHash": "0x677b2e1ba8bfcf57028f1f34edf2db16d70d9aefe67a6d2278676ea4af952ce4",
      "kind": "transparent"
    },
    {
      "address": "0xa2f549FB0ae58E818cad6c63B315a15c2b405382",
      "txHash": "0x422f7b8a45cd0fb1bb9207d68db49ecbb9fb7391f189120f2065dad8546d8b62",
      "kind": "transparent"
    },
    {
      "address": "0x0C308FA9892d1a64350E701B93206b80F042dDb5",
      "txHash": "0xa5d735e219a7d4cb79e2b613c3229d8b447b601d067037cbe2dabd792c94f50b",
      "kind": "transparent"
    },
    {
      "address": "0xD34b89B53957ffdd0958086DD6890e3491C01088",
      "txHash": "0xa7b1af0ccf88901a8fe7b8a56ae422d82d92ec3fbf7b18bc1bf7dbe5a0c4d70c",
      "kind": "transparent"
    },
    {
      "address": "0xCFBc7834E28227B953A1D5a2e9E234212c6C943A",
      "txHash": "0xf52ffc5bb57b90fec4f6fe3b42bcbf22f6bc0bf6ca1b36e8a0b58327df83c5c7",
      "kind": "transparent"
    },
    {
      "address": "0x7d279Fce5D624871EEA5120c73D98828c9A2528a",
      "txHash": "0xa9b0cbe4d7067c4bd6ba8320a888279b25cfe06423785e3e9e160d2dc095310d",
      "kind": "transparent"
    },
    {
      "address": "0xc8c5798c44974608117A3bAaa44254C1B596a883",
      "txHash": "0xe3da13e35c184085de50b61824cd06ea390cba549c7173ce28556fb7c53a80e1",
      "kind": "transparent"
    },
    {
      "address": "0xDd0BbeC8C359D9aeBc24958fc39dC4919eD0D9F4",
      "txHash": "0xa083d9b5a950f7a7d9b94dee52558c83693e3635a178b4c66475eac5b613bc9f",
      "kind": "transparent"
    },
    {
      "address": "0x5DA97973Ec4F6fA6e5933d8cA02832a908854B9f",
      "txHash": "0xb9d4fc6e86a61bb02da7a636b01df230dba4080d8d434a2595be2c85eeceb5a3",
      "kind": "transparent"
    },
    {
      "address": "0x2Edb553fD7C032Cf2d0005a3f4462f3C22bA6608",
      "txHash": "0x1a0774a9cbdbcc16915a448b588e9f8306847ffca476403d5982468d749394de",
      "kind": "transparent"
    },
    {
      "address": "0x4EeEB958E0220951060Ef77ce74d1243521C9bA6",
      "txHash": "0x37e18d10ac6ab2179774da83024ce60f89ea73dee907c29239d71c7d97e49faa",
      "kind": "transparent"
    },
    {
      "address": "0x8fE68ec74682c9184c3E2bE2CF1aCBcdbcd31042",
      "txHash": "0x21dcac646070d70fa3e71ef49fcac3d0a6c6da1513800ed72ac86fd950105621",
      "kind": "transparent"
    },
    {
      "address": "0x8D0B158104cc21604A323427903cc6346c130cf7",
      "txHash": "0xed9b768abd5d8069fe3a6d012848e92990770d7979a7c759f3efe8c798dacb2b",
      "kind": "transparent"
    },
    {
      "address": "0xd38a3cEE9dbbcAC5Bb3B18Fa17cf068455933c01",
      "txHash": "0xf4a6452df012cb67e4f6e2ba7adf8970f4a5a8920488c66bb1f694ce17de238c",
      "kind": "transparent"
    },
    {
      "address": "0x70f4C92CC784514a892Cc1a179422b9c82f96406",
      "txHash": "0x6d77d31b318a5f2c0c60a0e5512f52c2dad9b97b1e2f464e5a724d011cb777b3",
      "kind": "transparent"
    },
    {
      "address": "0x28A060bfD97aabeaD246354D38F3b20E9A327b7b",
      "txHash": "0xfd0dcef7018241de24f1d3ed0ae3e0b75dbd020510aa24f796914f28bfd809ee",
      "kind": "transparent"
    },
    {
      "address": "0x58231cA9CA3f3f9C628f64AE463DE7C66a7BBd8E",
      "txHash": "0x20175718111e17b5cef80e558ac8ef596fa30f4ecf25fcc5b8d81b9af9fc8a75",
      "kind": "transparent"
    },
    {
      "address": "0x66887B862328F6Fb0a11012F78E59f0AEe504e6D",
      "txHash": "0xb7dcd428826253b4237e8836fd07824a0370ddbd6c315e2eb0be268da38b59c2",
      "kind": "transparent"
    },
    {
      "address": "0x8B6870465cE0F9468d7bAEF2a128EcE91b462a44",
      "txHash": "0x1773bc5873b94899238a853febf588f1ff7479c201d439015de41658011e2812",
      "kind": "transparent"
    },
    {
      "address": "0x12ACE53d9F30dD65F362D04110a77cAC2F7ADc82",
      "txHash": "0xaa0431d336f2cda071e5c8ad874509a248815deb9e18c8eb1ef099ba6f3d69e4",
      "kind": "transparent"
    },
    {
      "address": "0x70A21F49CB277858DdE0358E6D502cf53AF1e0d6",
      "txHash": "0x4ed69a6225be9a48b8bd472453c2da2a87e33dc951fab54f9b91c11eccd4cb5a",
      "kind": "transparent"
    },
    {
      "address": "0x81081900b029c34E1aB79f166FAab5eBd167D820",
      "txHash": "0x4466eb70593c35d0b36945857789b3b49a7e01dc90e563b06f8fb40e5db3ee4a",
      "kind": "transparent"
    },
    {
      "address": "0x81a6B8cb753169BAE11508Dd0A7c6D10838617a8",
      "txHash": "0x3065d8ac14ad1ae96c4441db3ee58ec68150e4a94d4fcf12b1b041b2110a3a3e",
      "kind": "transparent"
    },
    {
      "address": "0x1A0c2f06f82a5fCCa2E23b54366839701c845f69",
      "txHash": "0x662296971ebb1f8acff4ac5d935efd602122f35a7aa95993a5802cccb132fd70",
      "kind": "transparent"
    },
    {
      "address": "0x77B4BB9dc77270f4d3d7f3733C4b534d71d3CAef",
      "txHash": "0x77fceea7ac255ad58b0b38358b898d4b446875579fc4074d61f8fdcd827f259c",
      "kind": "transparent"
    },
    {
      "address": "0xB66afC7e4D9fe0aB25382197A4703aC3E1df54DF",
      "txHash": "0xbfbc0b0a979bec2e5f3eec04f2cc3a1ceb613bc4b4fa61aab7086130e23dc9d9",
      "kind": "transparent"
    },
    {
      "address": "0xA7711C1B7f1644BD9Ee7de7ECFe4D0FbBD983eCe",
      "txHash": "0xb4aa84a9ac28d89fd784c69e0f0079100c2826a0b1e0da6a1622b1f4464d7dc7",
      "kind": "transparent"
    },
    {
      "address": "0x08D16E28e265Cf601642eCE176c7AfD629564be5",
      "txHash": "0x88779646be46ff67851bdb8c2cc0f11a48aacdd7308d5be2e087946dfb2fc7fb",
      "kind": "transparent"
    },
    {
      "address": "0xA9Db22CB2eC5da3a4e3f1E96A011718e718177Fa",
      "txHash": "0x1ed4d96cd64d0480d9bc121afe7e86bf14542aa39bce9f6471b959acc8f1f50e",
      "kind": "transparent"
    },
    {
      "address": "0x07Cf816606206743cDc3ccFA7fB775874529647a",
      "txHash": "0xbf4bcebc8e48ab9ac4568b2d3342a62112f9e8d39752288b43eae150579e3161",
      "kind": "transparent"
    },
    {
      "address": "0x76400E67676F0a2b8fCd78e061DBd82d838e8555",
      "txHash": "0x447d6e5a67489bf28643bc62de9c006aa072afe60b110c1a85ad07974f701ca7",
      "kind": "transparent"
    },
    {
      "address": "0x126C6A63BBF2EDcE750589D126BBc452EfAdCaa7",
      "txHash": "0x525545299385e45033015cce924f2645755594e57997c16995427f3377ec1b4d",
      "kind": "transparent"
    },
    {
      "address": "0x2F656cf2fbc0C215544533be0D983fa80F3E841d",
      "txHash": "0xfc36ac02bf7828853f1b96a0a0f727670de3bcf8e70a2543f2721fb3bbdcf70c",
      "kind": "transparent"
    },
    {
      "address": "0x8ae1Ba55c1415a041D83eF7f3E579F104E690FCE",
      "txHash": "0xe727dc9c747ee8b2709651c74ec52d9d220a10dd39dd1a12686fb26360ce0230",
      "kind": "transparent"
    },
    {
      "address": "0xF73E8EC653Dd8866D9147c85b21be4A933336CcF",
      "txHash": "0x0b5c83f2b2be8c0c3835aa29b66ca263743841faa66c2fed1755084ccde027cb",
      "kind": "transparent"
    },
    {
      "address": "0xd11F73De9D144Cc93c7e078CD734C18Af99d939C",
      "txHash": "0xe95b2c6b4971c9dc05e5e6cfe08584fead01a48b515753546ef6d7375c60a10b",
      "kind": "transparent"
    },
    {
      "address": "0x5cFDeF6D11DB4f5BB975225182FFCcCD3c346bf1",
      "txHash": "0x87498f618678f9646c239ff9ae06813cd865459b91c9f97d70d154542763489f",
      "kind": "transparent"
    },
    {
      "address": "0xfe3608C367b6a6b28F2acffd0dfF584D70FA17c9",
      "txHash": "0x332496163a6b57dbad0b656763179fa0943afb778138482a2e7ccb4905982167",
      "kind": "transparent"
    },
    {
      "address": "0x9803C6EdCA384F59BA9Da9Da824d672bee47699c",
      "txHash": "0x3ccd19205467ee2814ae03ebb3913dfa1caf14323c1644c94a249800b4409ddf",
      "kind": "transparent"
    },
    {
      "address": "0xdeD7B1CbD4e99a41C9AA2fF427550eD56a69A14e",
      "txHash": "0x82a3c6110ff5872b44b74adb280efd664f9bbc4f18de3e1ba0bf69adcee92fc1",
      "kind": "transparent"
    },
    {
      "address": "0x78c2e365B64a016247d86274d1F0240BB59Eb4DC",
      "txHash": "0xc13280debcddb4704e5554ebb38921bf8b0855616fd80bc7100fc7e19660cf58",
      "kind": "transparent"
    },
    {
      "address": "0x9Ade29Bc63Ee169Ba2920f383795caE99a667029",
      "txHash": "0xf29cff51ff685a7ba952712f609930549679eb245e31469411fa82f87783fda3",
      "kind": "transparent"
    },
    {
      "address": "0xA4465a171E3f75DAc3526d30BF8Bee4CdB1e322A",
      "txHash": "0x6c52f1148c3d7555058a4df3ff92e19a8b0e70b6301f15ab3b675b9046e5ae41",
      "kind": "transparent"
    },
    {
      "address": "0xB05Fff611ba232E528d81555A031A7cF4BBFE723",
      "txHash": "0x71e4419d0e78e866dbaa0b042449e11d5e9e68488ad09baef30593591d322a53",
      "kind": "transparent"
    },
    {
      "address": "0xc5A4D61B5Fa4a78D13e3d15c6DE359F1Ee29784d",
      "txHash": "0x258aa02b60cb72e4b078448a1f274118a1fe29befc71c357e58dde8a1a358dcc",
      "kind": "transparent"
    },
    {
      "address": "0xe9A05e4db5f65c3E894deeF20bD9F881bD7d104e",
      "txHash": "0x9b3068994c23b02d08dcdf2b884b59686aa761cecded0212929bc2d3a392b40a",
      "kind": "transparent"
    },
    {
      "address": "0x8E63E6E11cF3A575bed0B9Cb99ba731b99c54dB1",
      "txHash": "0xc1375f2ae6564c315f975a7e00b17cfef5c04ef900af9b5f1c0deb62f4d97894",
      "kind": "transparent"
    },
    {
      "address": "0xe1917e6F11Ab71aeCC8D11F22815C21D540Af807",
      "txHash": "0xf3028089d07168416c56a6e3cd6829a3e75dcb691206ab4c22c919cb38409328",
      "kind": "transparent"
    },
    {
      "address": "0xF9A11C5c73558390c8F8aaB119E7Ec7f3013ABd4",
      "txHash": "0x938b5d58cad3a187e31bfa7a22af1aac0b3963d70993ee70297e46b365e95e2e",
      "kind": "transparent"
    },
    {
      "address": "0x40bD201aBFa40BB039B7C979C7778f13b3E5da6B",
      "txHash": "0x3a5ea975b1974fd2d315edb7211a98fbad8206e2433b6c75b60fbd4dc9a2ab3d",
      "kind": "transparent"
    },
    {
      "address": "0x47e6CC4C527Bb58F55ce8122132d9B4a719e070D",
      "txHash": "0xcbb7ad6e69f14cb254d49506607bcb9f7a2c1da76ed6abcf07174b89f2b0efa5",
      "kind": "transparent"
    },
    {
      "address": "0x426c825b1daC568e35Cb29f70e01Fd2785Df2e37",
      "txHash": "0x7659f3cd2034109e1f9e79aae29e71cca05d7410f962bbb52078855a075104d7",
      "kind": "transparent"
    },
    {
      "address": "0x2EE589Dc10880F1F66b89B47A6Aafe85eE419107",
      "txHash": "0x4e9cd21ccec2e51ad1650c9dfced06cb1202268cce879b018680318e315061e9",
      "kind": "transparent"
    },
    {
      "address": "0xa29e14e8fdB519B51B33D67c78e053125B8f6C17",
      "txHash": "0xce015c6647f2fede13001b22725c1e70597f7307384a20f54568a18a520b7104",
      "kind": "transparent"
    },
    {
      "address": "0xa469275068a516E60679f85C3642987Aa7571877",
      "txHash": "0xc3e1e8130ba96c53b26ae831d4c74f408a6c20c303f7504861ff4a1f92b3887d",
      "kind": "transparent"
    },
    {
      "address": "0x6BbC5caC9A37d2Be56768184B9969556E0194f63",
      "txHash": "0xc4d303fa9e6df029026816a88b6c3be66172e8b3f245c2ee0afb0cd5c845f023",
      "kind": "transparent"
    },
    {
      "address": "0x95BFC7f6b33390Ba110e04fb9CD28ff3a6C35890",
      "txHash": "0x4e5a55cfdd60d8d2eeb0c544de8b4e7542d8581a7c7f973b58cb1c099b080abc",
      "kind": "transparent"
    },
    {
      "address": "0xBd56ad18D6DA7c6402416A8E106E8b6791C38c28",
      "txHash": "0xf1a7c1a74f200875481888a1f4d7b39c753c66bf0fa61395c8173660a904a8e6",
      "kind": "transparent"
    },
    {
      "address": "0xfBCCebc4393A029bEBAf0aDAB0EC32817246F37E",
      "txHash": "0x0c0f0f90dbdaf1a5405d3bb0686a7d779f032b706bace25d4e28a409a71c7474",
      "kind": "transparent"
    },
    {
      "address": "0x6fCCE629848EE01f583BA5ccF5cb901735c1e155",
      "txHash": "0x4262404054c6a96a07b40f82d96d0059cbc009c8a8a699a12fb252898fb9e2af",
      "kind": "transparent"
    },
    {
      "address": "0x04BE07A6Fa58BB28f18466d547F0848156de58aE",
      "txHash": "0xd4214521445959e79960fbce345a3546775375b8adaa752acf2f33a9b629c360",
      "kind": "transparent"
    },
    {
      "address": "0xB51b3Afe15DE4aC558756f4b48AeE5C021a5d7Fd",
      "txHash": "0x398becef059f35b104e7df69a83671f2f4ac5be3f34b091c568442a6a39507bb",
      "kind": "transparent"
    },
    {
      "address": "0x69eB58672A39D0C66497BbE02E85dA1CbA1369f7",
      "txHash": "0xe8fd61259b6479117e3df4b5fe612f97086536a1d595e92075d57cd683412cc5",
      "kind": "transparent"
    },
    {
      "address": "0xC0f82aC2169131f4fA0b97ef234159Bf5b1294f6",
      "txHash": "0x921e95b5e7779b8d5fb3c638e0a06e13bd9215adb7848641e6030fd7f96e31e9",
      "kind": "transparent"
    },
    {
      "address": "0x2dF4866B9469c005FBbe756427a2abAFbFb66f01",
      "txHash": "0x8b7bf24b9d52385f109b9bd9268207c550bcc15569945ba25912637d799acbe8",
      "kind": "transparent"
    },
    {
      "address": "0xb30EBcdE42424084f26F81E31Ea55dB132C11378",
      "txHash": "0x1d88596413c2623e721dae953f7c246fd55e033fa5eabc0246b56fecb2468403",
      "kind": "transparent"
    },
    {
      "address": "0xe80C0EbE2EF00c5399368AC44F5D8f9407E51206",
      "txHash": "0xa8a1ef32c0b8d263e87d84e20475f06d16e5b35fef04d0ce62a516a728091afa",
      "kind": "transparent"
    },
    {
      "address": "0x586D8dD6C382424D9eA849B49d4269201FA6d89E",
      "txHash": "0x9db9452fdbe37c001a16c39df995a165240789afe85c66e9cd77e56be9ae7d72",
      "kind": "transparent"
    },
    {
      "address": "0x30bff9123D9894FCD36D15d1DA056bF5D3D8E2EE",
      "txHash": "0x50b273c62bc3f167a7de16ea5144a5f6feb0f2e9da10feb64dfcdb1a542c0b9e",
      "kind": "transparent"
    },
    {
      "address": "0xaF59Fdb9679A7867687e1a7D48eB66a8537A4207",
      "txHash": "0xa198b49bbf0a24c3cd2723bf4b75e83d45fc2e706b6a59fa82906ec56f03079e",
      "kind": "transparent"
    },
    {
      "address": "0x0BF95BDF972C268ca86a4a6C4b3c29a4181D698D",
      "txHash": "0x430ddf3c60e5cb91c6d6be3793086870854cb88e13a460c1f7ff400e05a41d57",
      "kind": "transparent"
    },
    {
      "address": "0x0a1c2C1794A32FfD51Fd3f983C936B695539c47C",
      "txHash": "0x670259596811c8ff32b6d50389f0140f113249e44554d00830c0943504c90aa9",
      "kind": "transparent"
    },
    {
      "address": "0x74aEA08708C43729e3deD358379Fd2E5cba08A53",
      "txHash": "0xabaf5f079950e1ff28bfe30ff902391ae3d9de40e70b92fa7944edb365ba7295",
      "kind": "transparent"
    },
    {
      "address": "0x7f1c5573D44FA5F8B128a2f2a13A0dF29fcafd15",
      "txHash": "0xa54788508ed902cdfd6f5e4e9d70834099abf4c26c315ad9b4ba386472f15d4a",
      "kind": "transparent"
    },
    {
      "address": "0xaF0FA4988E9A4c4cC5ac31F6549cf589fE3b50A9",
      "txHash": "0x33df81130cba8d48bb8adf73918d5ff7f502db7753a4c93399d520faed60c361",
      "kind": "transparent"
    },
    {
      "address": "0x68916361E1a8364F11A20Ab251C4BC64a3Dc3010",
      "txHash": "0x17cd67eb0592a00e6bd3c5428f120f0c29ff9b245bd3dd416099b8b4a44dcd4e",
      "kind": "transparent"
    },
    {
      "address": "0xb34B9c88E8d276d81276B8a4AD3A0540Efa825dF",
      "txHash": "0x0d919db9c106b567fdbc2748fd336cbf8b45429f2f8136b0303b745e884d6c81",
      "kind": "transparent"
    },
    {
      "address": "0xafF426B798B036EEb5c949765308fc8d57894c4e",
      "txHash": "0x726d12a1b4dde056481c84c54ac92673537148bf43aa65ac08967c8548555ef1",
      "kind": "transparent"
    },
    {
      "address": "0x314dCAa8b4D3F64F6d0200cFdE60e54222052198",
      "txHash": "0x732a14959f749b547256d716dda358da7c2d8a911d9ef91bfd24cb34e5802627",
      "kind": "transparent"
    },
    {
      "address": "0xa8E8B3890eE20Da65708b71cc7E51b54649Ec046",
      "txHash": "0x6a668f4f47f81cf9c166e30cb9147f970125cbb27875bd9be6b540e6d0468903",
      "kind": "transparent"
    },
    {
      "address": "0x4AE82c8870a3e1b733155523BF24c2e53C3deD09",
      "txHash": "0xf858194b7eb79024152e09ecf9d330563d84fd2b38b3d2ffb7d76a3a4a8be160",
      "kind": "transparent"
    },
    {
      "address": "0xA9e4771caF47E883648B9c8a7F0Fe4e2521edE3B",
      "txHash": "0xe31b51e82e38e1d43701945440a7fb62d800774dad33d9d696db3293f5cbd8b2",
      "kind": "transparent"
    },
    {
      "address": "0xF83D84B3cd2e32C6c21eB6119e9219Bbec13C713",
      "txHash": "0x69d6a3c5392c508ea45a01b9bab8269c87ebf47f9b1ac177ce4425cb4794e7a3",
      "kind": "transparent"
    },
    {
      "address": "0x02AD6C511fe1b5DaC92E971f58D378e365259C44",
      "txHash": "0x87350c81c37af2f0cf34e04d01f5712046ee195b64794f4281cb147dc02d9130",
      "kind": "transparent"
    },
    {
      "address": "0xC29B5Ff2AC06f5D446B46E9876B26006b0f90366",
      "txHash": "0x80cadda6c3fde90e28a7200413c0ce1f6f1565f0e6be375acdea6698c7d2439c",
      "kind": "transparent"
    },
    {
      "address": "0x725391FCd5C84f38981d5c02ea0C61b2D3ec8E95",
      "txHash": "0x459ea7223529e209ad9bcd0902d0d9f781fc115825af047e36f7d82575f31773",
      "kind": "transparent"
    },
    {
      "address": "0x0D2Fe852f42D72FdCba5D10d86Cf8D0cBabCaB50",
      "txHash": "0xdf33cf9994e2a89ab08d1e43901f2e1704e473a388884f92954ad9d751660a89",
      "kind": "transparent"
    },
    {
      "address": "0x3D3fAe0c3082D38A8755c4Dd44e1A8f136813134",
      "txHash": "0xaaaeed36a4e3b550daef6e4c934e076188eb41479234faea780a839aa2247dd8",
      "kind": "transparent"
    },
    {
      "address": "0xB9f4743a25AB5e5b20f0cc11750f27225CD19B01",
      "txHash": "0xfab83c3f7146e26d3178508257d017c5a3c4ee8a6138f4aae4c848a928497d91",
      "kind": "transparent"
    },
    {
      "address": "0x4136EB3aAf6cF4a32495bDa351B50907F6fc15B6",
      "txHash": "0x18571db40efe5f7df62a274258bffdb6c1e95b3f22feae0913722808edd53a9b",
      "kind": "transparent"
    },
    {
      "address": "0xcC650F3F05AD1a3529C3dF724bB0880ba8cE9d5d",
      "txHash": "0xb534ddedb831c28847deddaa01bd838a89e126fed5e0542f56f9fd364177a861",
      "kind": "transparent"
    },
    {
      "address": "0x3828a209bF8b48b81d515288A5aa3aF16aB07750",
      "txHash": "0x7040cbe15af1fb1a7e37d69860398afcb53f2120eda001516f392a649f537ddd",
      "kind": "transparent"
    },
    {
      "address": "0x430349cCe302D8189D74DcFc4BeFd423F9D190fc",
      "txHash": "0x2fc6ecfd9b461f0b4d10867623347cb2453d58f69266c395bd0c84c76fe829b5",
      "kind": "transparent"
    },
    {
      "address": "0x605B16FF26F2Fe2B93CB74b12D38AAA94F9e3135",
      "txHash": "0xb7dcb934e624ec77f1356ef382cefae029bfd55a8ead8f89a1934e2541c57da6",
      "kind": "transparent"
    },
    {
      "address": "0x75718CdED82F1F1e89e4D6cAf27Ed4D10ba66A67",
      "txHash": "0x79087a0cb5c7f53983acf24740439ad8e909fe466b27bc8d0a0aa43215a1749a",
      "kind": "transparent"
    },
    {
      "address": "0x135ef94E075b67233DA9aa69eaE888D984DB6dC8",
      "txHash": "0x1357106da604a49df3d19c53ecf94a24958aab1adcc0d029e461920ca4e91c76",
      "kind": "transparent"
    },
    {
      "address": "0x05E9eaa6d32cad15E2922e54e750B59a6009F94a",
      "txHash": "0xb8a22f74d2444873741a48933d505edfcc9524743011eb0e1e8027d99f779756",
      "kind": "transparent"
    },
    {
      "address": "0xce3868b9933B38A0298aC3e6344683be94C9cb2e",
      "txHash": "0x05931770ca6f57fd8b339940224b2e233944d708db9a6031364b6574764bd418",
      "kind": "transparent"
    },
    {
      "address": "0x33496f1C751b8637E109b094096158e3f8532339",
      "txHash": "0x5c8cef8db8f7043ec5acbc1fbc9518547599bdbbdecaa512cd54df5015b568bb",
      "kind": "transparent"
    },
    {
      "address": "0x8a17787BafB313fFc10CE711c8203d81e15114aE",
      "txHash": "0x03a3fae8af8fdab5dd3f49451282acc2db9c904ad709c22443b60035c11fd317",
      "kind": "transparent"
    },
    {
      "address": "0xf27978062772a4f062Ca536D2F10b4a050371BF7",
      "txHash": "0xaaeeec7d4d0bb53944a3f8a63060006b5eedc115a0f70085a249354bc73ebbb9",
      "kind": "transparent"
    },
    {
      "address": "0xc88F3B62743652aAf62542e2144d43BFD0c29e45",
      "txHash": "0x9bbc002a8feb511ac15267ed01adccabbb9a1ce641eaf548f0dd50c22fc3b46d",
      "kind": "transparent"
    },
    {
      "address": "0xbdbBeE8cCA746E6aF6b6BAd1f11418988a8955aD",
      "txHash": "0x2f5223aa10a861439735285dcf6cbcccd083c7b908781cee3122d4b960b45042",
      "kind": "transparent"
    },
    {
      "address": "0x443b7C1336Dab4e7910FB76D18Ce79BaF56d354f",
      "txHash": "0x9d0ac14cd8d84d6b6fc802d8f5e178f6f00fb466b2e6faf03659822acf821f5e",
      "kind": "transparent"
    },
    {
      "address": "0x7b893F321A9387D0712ED8650ab58EeCEa175F7f",
      "txHash": "0x4c53c9f15c9568b764ba8b24b4dbfb3b9ccef2df7efbf971e9d09be788574a78",
      "kind": "transparent"
    },
    {
      "address": "0xAeE9cAA032cB90F7032656EF9C8b53f6ae607443",
      "txHash": "0x30c1cc4eb3e9163f96664f24125d0d07abb53038154fa82604cf990c9b8a646d",
      "kind": "transparent"
    },
    {
      "address": "0x31dD3b9881Ff732C9cF5395C27abBc335346dCc0",
      "txHash": "0xc783ced2b223f62f08e5dc5349f32c24fc2a9d570d9658d8bc140651c37b2c0c",
      "kind": "transparent"
    },
    {
      "address": "0x1B1c7d90BB63856a8052224905872E69194D607d",
      "txHash": "0x4e92cc1a9a9da00d4f2546a4c520176adc2c81faca5b2bc44a7b3a6c9407c6c9",
      "kind": "transparent"
    },
    {
      "address": "0x572136E082b3257793944cCdD65169C2174994B2",
      "txHash": "0x042c53cd50baf01f13d291c1ae7e8cf4dc591e2d8bea2c0023e1880faa5e6ac1",
      "kind": "transparent"
    },
    {
      "address": "0x48082Fa4DcE1922f72711dFa2C25dB438a0168Fe",
      "txHash": "0x677d8a6fc3d763c900b785400c3732e58eb748c3316862ccd5efb8c4193e64a9",
      "kind": "transparent"
    },
    {
      "address": "0xb514fB2FdB676dc5CC3c005a31440cEEf82980c6",
      "txHash": "0x86dba130daac4b11b856ba8f4866686601fdbaf6f58e03d0313dc9e3b0d55ce3",
      "kind": "transparent"
    },
    {
      "address": "0x34f2A96eEc366B9CC762816cF3d2376fE16c52DA",
      "txHash": "0xead5f84113d9b7b6797c6b0b542b4dc519ce56e1bc32a26d9fe566e5529e6d8e",
      "kind": "transparent"
    },
    {
      "address": "0x8EDdF59406cF3D9B1D322A8a04684dD3F47fe2A9",
      "txHash": "0x5dfa427fb27ecc21500ea84737e2783a89309435e176964894760b9c291c1f87",
      "kind": "transparent"
    },
    {
      "address": "0x2eea84a65Cb96bb1B7524b1854881F4EFc1BC9aF",
      "txHash": "0x6eb92621ca0849dc86e0398ae4f29447b5e6a0278aaa912d3ddd8ac25c193ae0",
      "kind": "transparent"
    },
    {
      "address": "0x2259427b80Dcc665573718e266F89e362801A815",
      "txHash": "0x1f340911a39cd29fc52ec88895d8871fb480a7c27256c2a76fa49c0bad54ecd5",
      "kind": "transparent"
    },
    {
      "address": "0xBB315B03FcA9D8bc326654a5797B0D68f182396a",
      "txHash": "0x1c0076f708b366b8bf19b48f728ff6cfb8d13f53c9f2c014f45bdae4a77c1378",
      "kind": "transparent"
    },
    {
      "address": "0x4C0fa2ec2Ce865257a1916563eAeddc7BF0D265a",
      "txHash": "0x2055ed9f89653f26d3466fe51f01691fa33abe091da1a1592d0c22efe1c70b49",
      "kind": "transparent"
    },
    {
      "address": "0x27b4B68aC4f74A08D1480B121685cCF387aBf68F",
      "txHash": "0xf042f8d6c39e94dd40486697ebfc99687484593062260972de04b8937b3df744",
      "kind": "transparent"
    },
    {
      "address": "0x6645A221908db8a71BCc572CaF9A769600626Cb4",
      "txHash": "0x4991bf3e0220e8f5dd5ba2daa2092ab1d7709fa3800fb1d269acdbfa3c512180",
      "kind": "transparent"
    },
    {
      "address": "0xF6c8682e630140136E3b302cFa32Cd06B73404d3",
      "txHash": "0x757a51ad4297b9363d5a0e2fa0639cf05f1e6000bd5005505ebd8d363ce61b62",
      "kind": "transparent"
    },
    {
      "address": "0x96A7be7EA8e79454cb2406d60329D58C609e9db8",
      "txHash": "0xcede460822c1fdbd150cf47b1fc84e02f45c0b0dff5eff4097cc340dc88de997",
      "kind": "transparent"
    },
    {
      "address": "0x6597F87Eda5cA75fbe91041bac7376EC540cb614",
      "txHash": "0x8d12cbcd1f433572724d7f9a367a3d69f1698e09bf0e64835d62ebf23d07a6e4",
      "kind": "transparent"
    },
    {
      "address": "0x7a9778b4B9f3a1a8a7D4fb735993c511De598791",
      "txHash": "0x8a757f7032a3a5907a801b0d721485a1e7e1eb428d4bc670b3b15a613e9cf489",
      "kind": "transparent"
    },
    {
      "address": "0x0dF3173C5FA0ca6C7A1cA318af774Cbeee7D996E",
      "txHash": "0x6ea88648559cb7b9e3d61ca580332bac21f7611038a4eee86b7adda96009322c",
      "kind": "transparent"
    },
    {
      "address": "0x490d1fC71fF9e8C803ca1F7435197366fC31d7C4",
      "txHash": "0x6fec82cbf79bc117eef4c922bcab10d269037ba958a4d636bdffa4b142cb7879",
      "kind": "transparent"
    },
    {
      "address": "0xeB8b1Ec414059e0d29108A2b2851EeAAF5Ec9c1c",
      "txHash": "0x79a014a3a89c3f6562b36941fd2a60b286684f30fc83ce8c2022400d24359770",
      "kind": "transparent"
    },
    {
      "address": "0xD061CdA871C0691734478F95f563407c8EEB6A25",
      "txHash": "0xd16e9e54523e9b134c6c034c62493530f31163b630e721052f610c658d9eb70d",
      "kind": "transparent"
    },
    {
      "address": "0xc628ba69423839E1F1A1fD90E167Df5B3288C000",
      "txHash": "0xd036eaed4553916446e79f5e17ab5a8526689f28a36afcc3f44bc8697cfb8ce8",
      "kind": "transparent"
    },
    {
      "address": "0xD240675DafAcc5401D1Db0d1292a5Bf9Db39936A",
      "txHash": "0xe342be79adab7fbc313efdc7f5306bfad6f6e181ec73248081d0f83f1edb8070",
      "kind": "transparent"
    },
    {
      "address": "0x4de3EBd78860D4d7AbFa71624Cc82d5088f93934",
      "txHash": "0x0efab2c554cd43a8da288d95729f4dea749c79c2390b7bfc34e1291e73fa745b",
      "kind": "transparent"
    },
    {
      "address": "0xe48feDFfAe8412df1846B978aE301ea33ae190e7",
      "txHash": "0x2cff6f713e70ca7af68d9ff9f8972be33feeaad27d40bc5fe9a41e1aa30ad4ef",
      "kind": "transparent"
    },
    {
      "address": "0x691bBA6732C614f1D06c0b7E4e08977F03EbE7F9",
      "txHash": "0xad6a9a5b2a3e37b0f41e7c0c08be5163229453b1ba5d06bb79b582a0a46d9218",
      "kind": "transparent"
    },
    {
      "address": "0xe4F92f81F1c76953b8Ce458f6C200160789E682a",
      "txHash": "0x4ba3cd494b42d8847d7db992daae7706e55b595c615fe3ad022215e0ac9883c5",
      "kind": "transparent"
    },
    {
      "address": "0xd3413d599447eEbafDb4E9E2693db5F5De18F8fE",
      "txHash": "0x5c23b04c1ca20118ac5342456a837f26db2def022cad90834557bfc8e79dda5c",
      "kind": "transparent"
    },
    {
      "address": "0x5Cf4Ca66a3205edA210BdABFf249e5a91CD73D6C",
      "txHash": "0x191c5fc377916c568e0b55e7cf8a0feb5122fb736d2b1a9c51aab1a03fc4763e",
      "kind": "transparent"
    },
    {
      "address": "0x3e69F5e749683f8A47da6108B492C37E67560223",
      "txHash": "0x09f9d70837dc5f308a886996b12003f635574a9e62b3e40d261bcb2b0056ecdb",
      "kind": "transparent"
    },
    {
      "address": "0xED45912b9c04bFbD54142ECF44096db0F0b9Bb0D",
      "txHash": "0xec86fce91bc7d94e1519ac583a377aa1a6f26122020357360c834e9aea23d9e7",
      "kind": "transparent"
    },
    {
      "address": "0xF1415449A2505BC67566c0d3E3a3EF53A0A39745",
      "txHash": "0x3ff80b869bfd0d2c8a89345e216489bd29bc4418c91dd6606c2ea6349f7b5bea",
      "kind": "transparent"
    },
    {
      "address": "0x2652D7D4527e943CcE3A2b05351BD31D6C2Ec201",
      "txHash": "0x49a5e5a6171b95cd6849d3b36e19cb55480140a59c1aa264b7d9770382c2a255",
      "kind": "transparent"
    },
    {
      "address": "0x61dfDCdb757660B3124C2361fd8209c86197A31D",
      "txHash": "0x081bcb1fe666ae95c3b31bf753d79a7d3a0a9a522179be6e94cbc4a0690ec70b",
      "kind": "transparent"
    },
    {
      "address": "0x46369d1acA3A8A59680C345F926985eb4eCb050a",
      "txHash": "0x4934e90025c68d053bae5051009d74e51e754946797a9ec3026281f4f59d492a",
      "kind": "transparent"
    },
    {
      "address": "0x7c31c65349f6Ead0F9532C5B8D2aA944c7333FC3",
      "txHash": "0x8ea43c901b81374874ccb9e875c054f4b8d491d380983bb03c6ce5fadf35834b",
      "kind": "transparent"
    },
    {
      "address": "0xaEfcEeAa929992808A36478B2DFaAa741e22A5A2",
      "txHash": "0xab38614afbb5eac93f0ba0018be08d28c7c5ccf41b6617774adafe4fc3c29dca",
      "kind": "transparent"
    },
    {
      "address": "0x2966dd0736DEE4158E6aE9d0E512569Bf9e4746B",
      "txHash": "0x8f139923be0736ec8f1b9749444f4f2ac3bfa3dcbd408249540cb4640957c59b",
      "kind": "transparent"
    },
    {
      "address": "0xfe9983B46d70adA7b33DFA751A8CD343C2dc8eA8",
      "txHash": "0x0a4b3e309e5eadc15c14b3d155e7034ed68563cc72ecf504f43cc0f15076a0f2",
      "kind": "transparent"
    },
    {
      "address": "0x80290D417bb3A2b16bDCA666005E2086A938a173",
      "txHash": "0x611cfcaf5a219c56f97adc2513b1090994c6e7bbf9a0d6f3c0b4fa195a072260",
      "kind": "transparent"
    },
    {
      "address": "0xfa793b9AEc941D65e07926067Fd34dC4dC3ADc99",
      "txHash": "0x211b7f3623332868696acbe21e26605dc667ac07a8eb67bf1d0fc36c44dda66d",
      "kind": "transparent"
    },
    {
      "address": "0x08c00D9792F169257D13B5470B0113dEa2Ffa9c7",
      "txHash": "0x8c46ec1538fe5ec56ccd99be1302fc49cc3f87d60efed0420c4c634e0e4741df",
      "kind": "transparent"
    },
    {
      "address": "0x6B74D0743BCf2a508288dE1642a66Cb9f4509e88",
      "txHash": "0x65cb979a3b5c8cddfbc694be31afb495c103bfd7ad5c7eb7313d7b183cabaf60",
      "kind": "transparent"
    },
    {
      "address": "0xb751D883B487C33D0bB3976F051320d82bCD547E",
      "txHash": "0x892f798e1d225a0beb4fd06958a3f05427e24c3ee2235b809d7bc044d0380bf5",
      "kind": "transparent"
    },
    {
      "address": "0xcC3D312f399B6d4ca8Cf9D928417e8Cf3CC515D9",
      "txHash": "0xff264e5657ed1b4fcb3e1d0c4276039fbe64e56f07dbdd947a173bd3e39517fc",
      "kind": "transparent"
    },
    {
      "address": "0x3eC3ad152a9C10236AC135d35bA690afc5C28Edc",
      "txHash": "0xd0ebf8f4a15a91a25c13fa882798023eb4b20e1cee4edcd68d9bd818de3d56b2",
      "kind": "transparent"
    },
    {
      "address": "0x0b1737E3bc2B37Da6D7CFCD5a9Ceb51C00c5Fed7",
      "txHash": "0xa420f0843e66118f5e2eb59e81f46b8dbd3ee1622c51395e10ab52596928b903",
      "kind": "transparent"
    },
    {
      "address": "0x0D956939547e851780133ef067420AcF6f4C3E21",
      "txHash": "0xafa54f58f28f60f38a2f720ca3d9a06bf606ec21d15bc9260717b49fadcb3dcd",
      "kind": "transparent"
    },
    {
      "address": "0xA4de1845D2Fc29199b2705d94dBd9E5f32B74249",
      "txHash": "0x4beec9ef138205341a1f802a4c06ea6096d25549b642265ab1bd6e627baff119",
      "kind": "transparent"
    },
    {
      "address": "0x4f747146D8C73A06d97fef6B2D7fa39E08C36459",
      "txHash": "0x0a5d41eda6de6454e2bfbe00881bd2b8a2495092bc46a2acf259307388877367",
      "kind": "transparent"
    },
    {
      "address": "0x86861196Da107DEDAC42b19b12fF4A5D470671cE",
      "txHash": "0x07f8a1c04c64c807b755796644677fcdde588bea719b629784de70dc97a369a5",
      "kind": "transparent"
    },
    {
      "address": "0x74F6068b61e161175Fc49Bf49De754Ad091fFE22",
      "txHash": "0x399baa108af6f049853709ca90b0f59fbc0a4f1c1b80f276d392778aa8c34e53",
      "kind": "transparent"
    },
    {
      "address": "0xdBA87A7efe37fDb59E90EE050C726da796c4B620",
      "txHash": "0x01dc3c55e36a3efb45bc236bd5e5e1b25dbde7386953f2020dfeeedbf73c156f",
      "kind": "transparent"
    },
    {
      "address": "0xc863610B38a6Da75e37e97f4E9b6B9C49343C6EB",
      "txHash": "0xa84fe2a65461aef7426a05695be832140eed7e1fa0fa7d81a11701334276ad4c",
      "kind": "transparent"
    },
    {
      "address": "0x77428E1cF76e539BaCB0dC91945B5E49FF0601aF",
      "txHash": "0x24f055787e70780ba146a43069331335a57f419cc24784c16990f98fa2def9c4",
      "kind": "transparent"
    },
    {
      "address": "0x832Cf70CD53815D50e506F071348dAC38dc031e3",
      "txHash": "0xbaa98acb63b9b8af173dbd7ac92360035822ee0d964db8487059fbf41f9a6bde",
      "kind": "transparent"
    },
    {
      "address": "0x937304Ea55bF989885734C079Ef37eB1b5C464E4",
      "txHash": "0xb731ea70a42147e852afc88a08191565c42c0b6eb147f14c3aa42df743cc40e9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d11c9741808a44eb6254d7134994027cff09710f4f098424cfd8172bb6b1b989": {
      "address": "0x9EC4026432723A8F9B1208E0b6B847B6F0445558",
      "txHash": "0x29b124c23d85e094d48698aa1dd340640b5cae1cfab40811244a08b472ed779f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(RoyaltyInfo)13276_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:39"
          },
          {
            "label": "_tokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:40"
          },
          {
            "label": "_series",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:41"
          },
          {
            "label": "_zkSyncBridge",
            "offset": 0,
            "slot": "454",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:42"
          },
          {
            "label": "_zkSyncMirror",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)45_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:349"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)7809_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)13276_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "4fc87844666246bf1b8b44388e8df099e6175d0274edcb3671b933313aecb6cc": {
      "address": "0x4aaE490Fa5afca1BAFCc3eA81586Ae7Ab9E4a1D1",
      "txHash": "0x14c16d78050efacb53a43981c833b7db1857476cb67995137ce787307a76a413",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(RoyaltyInfo)13276_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:39"
          },
          {
            "label": "_tokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:40"
          },
          {
            "label": "_series",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:41"
          },
          {
            "label": "_zkSyncBridge",
            "offset": 0,
            "slot": "454",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:42"
          },
          {
            "label": "_zkSyncMirror",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)45_storage",
            "contract": "GenesisNFT",
            "src": "contracts/GenesisNFT.sol:349"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)13276_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)7809_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)13276_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "0e818de658141598aafce86f849944b352a9bb2bd5ea1bf7f964b4a895152cd5": {
      "address": "0x485c1678aF1d0C37788AbB3978bC16D8363985ED",
      "txHash": "0x82ceaf850c65f9f12725ead69daf7bd7624a503c23221e9e1713976acf187ea7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "rewardPeriod",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:18"
          },
          {
            "label": "smallNft",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC721Upgradeable)12560",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:19"
          },
          {
            "label": "largeNft",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC721Upgradeable)12560",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:20"
          },
          {
            "label": "finalTimestamp",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:21"
          },
          {
            "label": "stakedSmallKeys",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:23"
          },
          {
            "label": "stakedSmall",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:24"
          },
          {
            "label": "rewardsSmall",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:25"
          },
          {
            "label": "stakedLargeKeys",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:27"
          },
          {
            "label": "stakedLarge",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:28"
          },
          {
            "label": "rewardsLarge",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingGenesisNFT",
            "src": "contracts/StakingGenesisNFT.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721Upgradeable)12560": {
            "label": "contract IERC721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a75fb5b1cf7abfa5861aa4aeefec1adcd247f78d17b479cd797d67b9a03374f0": {
      "address": "0xf6D8bd8be2a18926Bf16BbaF9De3b0681ae045B5",
      "txHash": "0x5e2e887febcc0bf966742922174ca46854611ca046b2e539c32c155ee035e611",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "value",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "Wlth",
            "src": "contracts/Wlth.sol:13"
          },
          {
            "label": "burned",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "Wlth",
            "src": "contracts/Wlth.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Wlth",
            "src": "contracts/Wlth.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)7809_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6893a11d5a6437a9428546af1618fa201e0b7566ee1eb04c36e1fe5e5568842f": {
      "address": "0x3F9cBc8625D22Ef5dB20dF1Bb449DeE77Cd2C462",
      "txHash": "0x073323ec9f11ab326f6dc7b69e535f2b16e07935a583ed27fdbb32fb6fde43f4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_funds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentFundRegistry",
            "src": "contracts/InvestmentFundRegistry.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)49_storage",
            "contract": "InvestmentFundRegistry",
            "src": "contracts/InvestmentFundRegistry.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "38ad61a1a65b7abe4401d32b056f399b9740022754f4e66d730fab53619ac86e": {
      "address": "0xe44de07bBD91530FD64C854b7E377A7acB1caC18",
      "txHash": "0xe6e8cd38f48bea1ae453fb71edd56b8784cd0d092aedce06c58aa63d0ab03ae7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "wlth",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:9"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:10"
          },
          {
            "label": "actualWlthPriceInUsdc",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:12"
          },
          {
            "label": "actualUsdcPriceInWlth",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "af9421cfd7436882c196435f23cd980070d0beb7b1a0042c9be0c9df1e4a2318": {
      "address": "0x257d23Ee3c0aFF87538dBe14DDC1715d8285d409",
      "txHash": "0xed4bdf6b70dfb8aa2c0f80ed3001eda37421a3e768c29bb4ff45750b0e186b99",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "quoter",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IWlthQuoter)37035",
            "contract": "UniswapWlthSwapper",
            "src": "contracts/UniswapWlthSwapper.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IWlthQuoter)37035": {
            "label": "contract IWlthQuoter",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3f7edb9f1751a0741a58e0d947454ab10ca0865d8e7b40a5b52b15952cad45ae": {
      "address": "0x7601063246A0E77A52Ec2bd54eFf88C2ab496F62",
      "txHash": "0x1e982b601a064b9c90223a70d2b8e0fd53fd28a699b9e43b8e76b938a0b9d34a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "wlth",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:9"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:10"
          },
          {
            "label": "actualWlthPriceInUsdc",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:12"
          },
          {
            "label": "actualUsdcPriceInWlth",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a246d5fdc65d51ab3461620a89d205a975dbc61ed6cb58728a9f29b7507a3b8f": {
      "address": "0x900de1F665f0afE5B51D66746D8E714374D724Ae",
      "txHash": "0x639308c5750efafc010a2e41723d178a6c903f9fb52110e9c6b5f2d4b59bbdda",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "wlth",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:9"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:10"
          },
          {
            "label": "actualWlthPriceInUsdc",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:12"
          },
          {
            "label": "actualUsdcPriceInWlth",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "74486347d8cc32f1385138e304505c205c2caaa06fe34ac6ae71c90ef0afd340": {
      "address": "0x6beB24a3e7142739799872783338A4d1A57658FE",
      "txHash": "0x97ef131d4edb6265fefd7aaf7b57b3c6ccf9d1ca2a7c43e7b599ac625edcba52",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "actualWlthPriceInUsdc",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "UniswapWlthQuoter",
            "src": "contracts/UniswapWlthQuoter.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9925cd7a3ca46980493b6eb978655207bb37daf4f0387dca8a4ef74d6bf1c7ee": {
      "address": "0xc15DC040Ad9Ab568fFc661c05b6e5eb4ab439dAB",
      "txHash": "0x6248ad55f9f194ee6788f2be9c91d6422c0f97c986fd431ec059ab984f218d12",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "01ac97dd773e43f93bc6ce8ed8e5590368bc4af6338bf8a287792122ac1f5176": {
      "address": "0x6a6CB56009d83128F2fAa8743f1002BCc449B11d",
      "txHash": "0x9380780ac5819d0557a9b35d96659eb39fe95b5e4e333496ca0dabc0039c69f0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "quoter",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IQuoterV2)24741",
            "contract": "UniswapQuoter",
            "src": "contracts/UniswapQuoter.sol:9"
          },
          {
            "label": "feeTier",
            "offset": 20,
            "slot": "51",
            "type": "t_uint24",
            "contract": "UniswapQuoter",
            "src": "contracts/UniswapQuoter.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UniswapQuoter",
            "src": "contracts/UniswapQuoter.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IQuoterV2)24741": {
            "label": "contract IQuoterV2",
            "numberOfBytes": "20"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "51c55b5b94864c97c5880626d9772f74c1984b2dffdabad9d776725227cd49e5": {
      "address": "0x9bB625f6a15251805038795bed4Bcb3294Aaa2FE",
      "txHash": "0x02ff1977345f4f6b5aacdf3290b178161fbaed1913b67a8e080a67a382071a92",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "swapRouter",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(ISwapRouter)24841",
            "contract": "UniswapSwapper",
            "src": "contracts/UniswapSwapper.sol:13"
          },
          {
            "label": "feeTier",
            "offset": 20,
            "slot": "251",
            "type": "t_uint24",
            "contract": "UniswapSwapper",
            "src": "contracts/UniswapSwapper.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UniswapSwapper",
            "src": "contracts/UniswapSwapper.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISwapRouter)24841": {
            "label": "contract ISwapRouter",
            "numberOfBytes": "20"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b6551eb3e6f5ac014eee2e720b509659b7c2943d985ee9e77b72b15d914492c5": {
      "address": "0xeCCd9412e1882F3439C0a5A5B196fCAf5C158E95",
      "txHash": "0x0349ecd86916dbf47cf7dc4b20f44e794f391b9c310a9b47946b4d009b8230f5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:32"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:33"
          },
          {
            "label": "transactionFee",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:34"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:35"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:36"
          },
          {
            "label": "maxDiscount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:37"
          },
          {
            "label": "dexQuoter",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IDexQuoter)35798",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:38"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)15168_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:39"
          },
          {
            "label": "stakingPositions",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(Position)36442_storage)",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:41"
          },
          {
            "label": "stakesPerAccount",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:42"
          },
          {
            "label": "durationCoefficients",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(UintToUintMap)18119_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:43"
          },
          {
            "label": "registeredFunds",
            "offset": 0,
            "slot": "264",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:44"
          },
          {
            "label": "stakingAccounts",
            "offset": 0,
            "slot": "266",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_uint256)38_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:800"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]",
            "numberOfBytes": "1216"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDexQuoter)35798": {
            "label": "contract IDexQuoter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)36442_storage)": {
            "label": "mapping(uint256 => struct IStakingWlth.Position)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32Set)19200_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)17889_storage": {
            "label": "struct EnumerableMapUpgradeable.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)19200_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Period)36422_storage": {
            "label": "struct IStakingWlth.Period",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)36442_storage": {
            "label": "struct IStakingWlth.Position",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fund",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amountInWlth",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountInUsdc",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "investment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "period",
                "type": "t_struct(Period)36422_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isCRP",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakedEnded",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToUintMap)18119_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)17889_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "32f3aa2a31929520714791ea31cec3e5feeb1b5c199bed5ed6d52b5abd06542c": {
      "address": "0x6f0aa370840448d21e5797C52c8D3d9C5EC88462",
      "txHash": "0x33ce65e4dd35738ab923b31a1407d85dd4a5b6b31f86217cb96c5043d358959e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "tokenValue",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:31"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)15168_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:33"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:34"
          },
          {
            "label": "_investors",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:36"
          },
          {
            "label": "_accountValueHistory",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_struct(History)13759_storage)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:37"
          },
          {
            "label": "_totalValueHistory",
            "offset": 0,
            "slot": "457",
            "type": "t_struct(History)13759_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)44_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:277"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)13764_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)13759_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)13764_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)13759_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)13764_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8560208b6150e4ce38f04d45797284c4ea6dac261fd4f46b4f10de293f327629": {
      "address": "0x164BeeFbA1E6a57E6A1BD045a38C4b331eF9D125",
      "txHash": "0xb1b1396e800f48c2a1e5d6e75ab6138a4b4a77915c98f46c5f33784a275e173a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "currentState",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:11"
          },
          {
            "label": "functionsAllowed",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:43"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:39"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:44"
          },
          {
            "label": "investmentNft",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:49"
          },
          {
            "label": "stakingWlth",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(IStakingWlth)36797",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:54"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:59"
          },
          {
            "label": "genesisNftRevenue",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:64"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:69"
          },
          {
            "label": "burnAddress",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:74"
          },
          {
            "label": "managementFee",
            "offset": 20,
            "slot": "358",
            "type": "t_uint16",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:79"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:81"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:86"
          },
          {
            "label": "totalIncome",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:91"
          },
          {
            "label": "payouts",
            "offset": 0,
            "slot": "362",
            "type": "t_array(t_struct(Payout)36060_storage)dyn_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:96"
          },
          {
            "label": "userTotalWithdrawal",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:101"
          },
          {
            "label": "_currentPayout",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_struct(PayoutPtr)27502_storage)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:106"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "365",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_uint256)39_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:551"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Payout)36060_storage)dyn_storage": {
            "label": "struct IInvestmentFund.Payout[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]",
            "numberOfBytes": "1248"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IStakingWlth)36797": {
            "label": "contract IStakingWlth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PayoutPtr)27502_storage)": {
            "label": "mapping(address => struct InvestmentFund.PayoutPtr)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes4 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Block)36050_storage": {
            "label": "struct IInvestmentFund.Block",
            "members": [
              {
                "label": "number",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Payout)36060_storage": {
            "label": "struct IInvestmentFund.Payout",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blockData",
                "type": "t_struct(Block)36050_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "inProfit",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PayoutPtr)27502_storage": {
            "label": "struct InvestmentFund.PayoutPtr",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ee7819cf32ab748a104f7b92c6fb7d5c0c84b828254e4791658500d2d62dc542": {
      "address": "0x1A935069eCf5D8A705221B8f13F0b420022AE853",
      "txHash": "0xa8a8be9f828f79cb52ba1f4d543ce7ef3806c49ee930a4292651152c2b004dfc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "Project",
            "src": "contracts/Project.sol:26"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts/Project.sol:31"
          },
          {
            "label": "status",
            "offset": 0,
            "slot": "303",
            "type": "t_bytes32",
            "contract": "Project",
            "src": "contracts/Project.sol:36"
          },
          {
            "label": "investmentFund",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts/Project.sol:41"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(IVesting)36875",
            "contract": "Project",
            "src": "contracts/Project.sol:46"
          },
          {
            "label": "fundsAllocation",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts/Project.sol:51"
          },
          {
            "label": "fundsDeployed",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts/Project.sol:56"
          },
          {
            "label": "swapper",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(ISwapper)36836",
            "contract": "Project",
            "src": "contracts/Project.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "309",
            "type": "t_array(t_uint256)45_storage",
            "contract": "Project",
            "src": "contracts/Project.sol:156"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISwapper)36836": {
            "label": "contract ISwapper",
            "numberOfBytes": "20"
          },
          "t_contract(IVesting)36875": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b897922e37b2a7ae8e129b5f94f77d9fb504479f26be5fbc8a9a9e018e9a81d0": {
      "address": "0x05b58A157e12cE12f348f6A9d070483179ed6060",
      "txHash": "0xb919175cf245a82f00bc44c7584aa53534e80f790cd5569ea59a3577b18be33f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "095d2a510d1f0dbbbcdb03bdf8104db120b068301d1053918830e3fff94b7f68": {
      "address": "0x7bEb057cb5f8333E529b310ce336B2770E50bc99",
      "txHash": "0xc02955474f40439306515273bcc6cd7a161f006b64642d906b176e2f68fe5885",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "PeriodicVesting",
            "src": "contracts/PeriodicVesting.sol:17"
          },
          {
            "label": "beneficiary",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "PeriodicVesting",
            "src": "contracts/PeriodicVesting.sol:22"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "PeriodicVesting",
            "src": "contracts/PeriodicVesting.sol:27"
          },
          {
            "label": "periods",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(VestingPeriod)36404_storage)dyn_storage",
            "contract": "PeriodicVesting",
            "src": "contracts/PeriodicVesting.sol:32"
          },
          {
            "label": "totalAllocation",
            "offset": 0,
            "slot": "55",
            "type": "t_uint256",
            "contract": "PeriodicVesting",
            "src": "contracts/PeriodicVesting.sol:37"
          },
          {
            "label": "totalDuration",
            "offset": 0,
            "slot": "56",
            "type": "t_uint256",
            "contract": "PeriodicVesting",
            "src": "contracts/PeriodicVesting.sol:42"
          },
          {
            "label": "released",
            "offset": 0,
            "slot": "57",
            "type": "t_uint256",
            "contract": "PeriodicVesting",
            "src": "contracts/PeriodicVesting.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)43_storage",
            "contract": "PeriodicVesting",
            "src": "contracts/PeriodicVesting.sol:188"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingPeriod)36404_storage)dyn_storage": {
            "label": "struct IPeriodicVesting.VestingPeriod[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(VestingPeriod)36404_storage": {
            "label": "struct IPeriodicVesting.VestingPeriod",
            "members": [
              {
                "label": "allocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cadence",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cliff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3b1f39078f5d5206b24a839f6d61655a372f68625882e9834d2874e4003d80d4": {
      "address": "0x6a5F75106cfc8f1056082a6215AE231b8d157Ba9",
      "txHash": "0x1d487fb101215b09036181aa5ea0924373f6e2e046c74d586895ef0c4de9fe3d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:37"
          },
          {
            "label": "tokenValue",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:31"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)15168_storage",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:33"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:34"
          },
          {
            "label": "_investors",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:36"
          },
          {
            "label": "_accountValueHistory",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_struct(History)13759_storage)",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:37"
          },
          {
            "label": "_totalValueHistory",
            "offset": 0,
            "slot": "457",
            "type": "t_struct(History)13759_storage",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)44_storage",
            "contract": "InvestmentNFT",
            "src": "contracts\\InvestmentNFT.sol:277"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)13764_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)13759_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)13764_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)13759_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)13764_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ec31460557730adfad86c3dcff7e7ee1a51e008cb0fd15d170252341b84f6fa8": {
      "address": "0xcDE312efCffBC37E27d545f2D245fc599D65ab71",
      "txHash": "0x6453a6c1e8c57083cab4c7ad0e8c91da3ed767031d5bd1a4d5902b661110eca1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:37"
          },
          {
            "label": "currentState",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "StateMachine",
            "src": "contracts\\StateMachine.sol:11"
          },
          {
            "label": "functionsAllowed",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))",
            "contract": "StateMachine",
            "src": "contracts\\StateMachine.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StateMachine",
            "src": "contracts\\StateMachine.sol:43"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:39"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:44"
          },
          {
            "label": "investmentNft",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:49"
          },
          {
            "label": "stakingWlth",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(IStakingWlth)36663",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:54"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:59"
          },
          {
            "label": "genesisNftRevenue",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:64"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:69"
          },
          {
            "label": "burnAddress",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:74"
          },
          {
            "label": "managementFee",
            "offset": 20,
            "slot": "358",
            "type": "t_uint16",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:79"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:81"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:86"
          },
          {
            "label": "totalIncome",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:91"
          },
          {
            "label": "payouts",
            "offset": 0,
            "slot": "362",
            "type": "t_array(t_struct(Payout)35926_storage)dyn_storage",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:96"
          },
          {
            "label": "userTotalWithdrawal",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:101"
          },
          {
            "label": "_currentPayout",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_struct(PayoutPtr)27368_storage)",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:106"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "365",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_uint256)39_storage",
            "contract": "InvestmentFund",
            "src": "contracts\\InvestmentFund.sol:551"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Payout)35926_storage)dyn_storage": {
            "label": "struct IInvestmentFund.Payout[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]",
            "numberOfBytes": "1248"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IStakingWlth)36663": {
            "label": "contract IStakingWlth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PayoutPtr)27368_storage)": {
            "label": "mapping(address => struct InvestmentFund.PayoutPtr)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes4 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Block)35916_storage": {
            "label": "struct IInvestmentFund.Block",
            "members": [
              {
                "label": "number",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Payout)35926_storage": {
            "label": "struct IInvestmentFund.Payout",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blockData",
                "type": "t_struct(Block)35916_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "inProfit",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PayoutPtr)27368_storage": {
            "label": "struct InvestmentFund.PayoutPtr",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "374f07d3592a51fe256773bb530f2c4289ffafe9361f39459548969400452116": {
      "address": "0x6Fc8608D1F39775Fa62a11a8208ecfa3AA58b975",
      "txHash": "0x5cba6253df1ea0e13e24fad69c7824a1c1551adfd3838ad02833b2a25997b516",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts\\OwnablePausable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "Project",
            "src": "contracts\\Project.sol:26"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts\\Project.sol:31"
          },
          {
            "label": "status",
            "offset": 0,
            "slot": "303",
            "type": "t_bytes32",
            "contract": "Project",
            "src": "contracts\\Project.sol:36"
          },
          {
            "label": "investmentFund",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts\\Project.sol:41"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(IVesting)36741",
            "contract": "Project",
            "src": "contracts\\Project.sol:46"
          },
          {
            "label": "fundsAllocation",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts\\Project.sol:51"
          },
          {
            "label": "fundsDeployed",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts\\Project.sol:56"
          },
          {
            "label": "swapper",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(ISwapper)36702",
            "contract": "Project",
            "src": "contracts\\Project.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "309",
            "type": "t_array(t_uint256)45_storage",
            "contract": "Project",
            "src": "contracts\\Project.sol:156"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISwapper)36702": {
            "label": "contract ISwapper",
            "numberOfBytes": "20"
          },
          "t_contract(IVesting)36741": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6e65ae170572fa12920a1a3ee65afb2e97db8815ddf7211f4c0ce1b41e6e07d1": {
      "address": "0x2af0642edFd1cA3aaaa001767A7A53343700c6C4",
      "txHash": "0xa098c21f56bdf55b3381d2030ed8487137490b0b4df893b8fb0fc94a334eafdd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4e7b831bbb0bf11a679aed4b98e5c7ba6cbe578793a3b5306de720ce0d736bc4": {
      "address": "0x3e67EcB489204c02a274635fa695397D668F89A9",
      "txHash": "0x41e44a97f8d2ca170ef00a1d31e3568e9148f92445090cf837bda0e461c8f5b1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "PeriodicVesting",
            "src": "contracts\\PeriodicVesting.sol:17"
          },
          {
            "label": "beneficiary",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "PeriodicVesting",
            "src": "contracts\\PeriodicVesting.sol:22"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "PeriodicVesting",
            "src": "contracts\\PeriodicVesting.sol:27"
          },
          {
            "label": "periods",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(VestingPeriod)36270_storage)dyn_storage",
            "contract": "PeriodicVesting",
            "src": "contracts\\PeriodicVesting.sol:32"
          },
          {
            "label": "totalAllocation",
            "offset": 0,
            "slot": "55",
            "type": "t_uint256",
            "contract": "PeriodicVesting",
            "src": "contracts\\PeriodicVesting.sol:37"
          },
          {
            "label": "totalDuration",
            "offset": 0,
            "slot": "56",
            "type": "t_uint256",
            "contract": "PeriodicVesting",
            "src": "contracts\\PeriodicVesting.sol:42"
          },
          {
            "label": "released",
            "offset": 0,
            "slot": "57",
            "type": "t_uint256",
            "contract": "PeriodicVesting",
            "src": "contracts\\PeriodicVesting.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)43_storage",
            "contract": "PeriodicVesting",
            "src": "contracts\\PeriodicVesting.sol:188"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingPeriod)36270_storage)dyn_storage": {
            "label": "struct IPeriodicVesting.VestingPeriod[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(VestingPeriod)36270_storage": {
            "label": "struct IPeriodicVesting.VestingPeriod",
            "members": [
              {
                "label": "allocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cadence",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cliff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "94bb2804a1696d81ca83082d30193d019b29195012ad0f5fa036c04a32a6ceb9": {
      "address": "0xbC1e66E86B8B2C88E3d0382096B787A5Ba36E26C",
      "txHash": "0x829909bda044da36661bafb1e364fda9e059d8154778b19a20e53d2c35d36350",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "burned",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "Wlth",
            "src": "contracts/Wlth.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Wlth",
            "src": "contracts/Wlth.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)19321_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7809_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)7809_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b8b134bc2241e4a0d19b8a8d6654590b716ad692a5f169761d37053dccbfdcb": {
      "address": "0x26fD26CEe2CCFdd441a8839E62B5627Ad4C56A06",
      "txHash": "0x380fa920fa324c7165fded80536b2f14089a875efb9e42dd57066fb868e38498",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:32"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:33"
          },
          {
            "label": "transactionFee",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:34"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:35"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:36"
          },
          {
            "label": "maxDiscount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:37"
          },
          {
            "label": "dexQuoter",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IDexQuoter)7495",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:38"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)1374_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:39"
          },
          {
            "label": "stakingPositions",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(Position)7860_storage)",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:41"
          },
          {
            "label": "stakesPerAccount",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:42"
          },
          {
            "label": "durationCoefficients",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(UintToUintMap)2565_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:43"
          },
          {
            "label": "registeredFunds",
            "offset": 0,
            "slot": "264",
            "type": "t_struct(AddressSet)3767_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:44"
          },
          {
            "label": "stakingAccounts",
            "offset": 0,
            "slot": "266",
            "type": "t_struct(AddressSet)3767_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_uint256)38_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:800"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]",
            "numberOfBytes": "1216"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDexQuoter)7495": {
            "label": "contract IDexQuoter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)7860_storage)": {
            "label": "mapping(uint256 => struct IStakingWlth.Position)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3767_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3452_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32Set)3646_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3452_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)2335_storage": {
            "label": "struct EnumerableMapUpgradeable.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)3646_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Counter)1374_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Period)7840_storage": {
            "label": "struct IStakingWlth.Period",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)7860_storage": {
            "label": "struct IStakingWlth.Position",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fund",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amountInWlth",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountInUsdc",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "investment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "period",
                "type": "t_struct(Period)7840_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isCRP",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakedEnded",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(Set)3452_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToUintMap)2565_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)2335_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4f26c4fbcc5e064b2c3831967ff605ed9040d9395ffea2114c3a3a6da162e600": {
      "address": "0x713ADE9782ad56A83854ce4Ea2f33f8Cf04eB122",
      "txHash": "0xb0bd8f98bbb285965177e10f3db47b6ca50262736d03c2ec3c919f1ff4498035",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:32"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:33"
          },
          {
            "label": "transactionFee",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:34"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:35"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:36"
          },
          {
            "label": "maxDiscount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:37"
          },
          {
            "label": "dexQuoter",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IDexQuoter)7505",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:38"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)1374_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:39"
          },
          {
            "label": "stakingPositions",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(Position)7870_storage)",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:41"
          },
          {
            "label": "stakesPerAccount",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:42"
          },
          {
            "label": "durationCoefficients",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(UintToUintMap)2565_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:43"
          },
          {
            "label": "registeredFunds",
            "offset": 0,
            "slot": "264",
            "type": "t_struct(AddressSet)3767_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:44"
          },
          {
            "label": "stakingAccounts",
            "offset": 0,
            "slot": "266",
            "type": "t_struct(AddressSet)3767_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_uint256)38_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:804"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]",
            "numberOfBytes": "1216"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDexQuoter)7505": {
            "label": "contract IDexQuoter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)7870_storage)": {
            "label": "mapping(uint256 => struct IStakingWlth.Position)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3767_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3452_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32Set)3646_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3452_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)2335_storage": {
            "label": "struct EnumerableMapUpgradeable.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)3646_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Counter)1374_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Period)7850_storage": {
            "label": "struct IStakingWlth.Period",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)7870_storage": {
            "label": "struct IStakingWlth.Position",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fund",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amountInWlth",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountInUsdc",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "investment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "period",
                "type": "t_struct(Period)7850_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isCRP",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakedEnded",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(Set)3452_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToUintMap)2565_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)2335_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9aaf568fb2a1e88ccc19d6c1dc5921ffec32735bb1d01aa12b80025723987236": {
      "address": "0x7074759d2cce6D6beefED5E899b2687624424B09",
      "txHash": "0xc5009be9260735788d0e2d8b5f4678c9ff45978937d9fa60c766456c1ec94ee1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:32"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:33"
          },
          {
            "label": "transactionFee",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:34"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:35"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:36"
          },
          {
            "label": "maxDiscount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:37"
          },
          {
            "label": "dexQuoter",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IDexQuoter)35826",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:38"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)15168_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:39"
          },
          {
            "label": "stakingPositions",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(Position)36470_storage)",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:41"
          },
          {
            "label": "stakesPerAccount",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:42"
          },
          {
            "label": "durationCoefficients",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(UintToUintMap)18119_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:43"
          },
          {
            "label": "registeredFunds",
            "offset": 0,
            "slot": "264",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:44"
          },
          {
            "label": "stakingAccounts",
            "offset": 0,
            "slot": "266",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_uint256)38_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:800"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]",
            "numberOfBytes": "1216"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDexQuoter)35826": {
            "label": "contract IDexQuoter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)36470_storage)": {
            "label": "mapping(uint256 => struct IStakingWlth.Position)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32Set)19200_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)17889_storage": {
            "label": "struct EnumerableMapUpgradeable.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)19200_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Period)36450_storage": {
            "label": "struct IStakingWlth.Period",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)36470_storage": {
            "label": "struct IStakingWlth.Position",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fund",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amountInWlth",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountInUsdc",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "investment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "period",
                "type": "t_struct(Period)36450_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isCRP",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakedEnded",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToUintMap)18119_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)17889_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "43dcc23f18254074bf684878618709bbbf7c375158e06e38bf3e4f7ccde84bec": {
      "address": "0xA2ceE9692E0ceF856124E83b75BCeF13A280af19",
      "txHash": "0x1cec414fa39f82e1443ceeee24c0945e2e42a1f947cb02d3465bc556c140f991",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:32"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:33"
          },
          {
            "label": "transactionFee",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:34"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:35"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:36"
          },
          {
            "label": "maxDiscount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:37"
          },
          {
            "label": "dexQuoter",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IDexQuoter)35838",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:38"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)15168_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:39"
          },
          {
            "label": "stakingPositions",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(Position)36482_storage)",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:41"
          },
          {
            "label": "stakesPerAccount",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:42"
          },
          {
            "label": "durationCoefficients",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(UintToUintMap)18119_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:43"
          },
          {
            "label": "registeredFunds",
            "offset": 0,
            "slot": "264",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:44"
          },
          {
            "label": "stakingAccounts",
            "offset": 0,
            "slot": "266",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_uint256)38_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:804"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]",
            "numberOfBytes": "1216"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDexQuoter)35838": {
            "label": "contract IDexQuoter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)36482_storage)": {
            "label": "mapping(uint256 => struct IStakingWlth.Position)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32Set)19200_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)17889_storage": {
            "label": "struct EnumerableMapUpgradeable.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)19200_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Period)36462_storage": {
            "label": "struct IStakingWlth.Period",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)36482_storage": {
            "label": "struct IStakingWlth.Position",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fund",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amountInWlth",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountInUsdc",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "investment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "period",
                "type": "t_struct(Period)36462_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isCRP",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakedEnded",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToUintMap)18119_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)17889_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a0c992af03edeb413f5206b59ac7318d32211b0db9db200bc59cbac9f3ecc732": {
      "address": "0x849c0959593f86ae01fb664688830711e47937A5",
      "txHash": "0x885c6a2b60613beaa8df361d57f67dcaf7dc86691ed7a3b8185df188ec703070",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:11"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:12"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:13"
          },
          {
            "label": "governor",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:15"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:17"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:18"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:19"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1b826d4c543e6749e7d831431c22e39c0796b4480a3762faeb5cedec3309045d": {
      "address": "0x3C4c9165D7C421e8993c11a60B2E050530355F55",
      "txHash": "0x3be0a0c9c194f3346e6299d896c1b4a6bed1c3555e0f06218f293a4db65a36d8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:11"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:12"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:13"
          },
          {
            "label": "governor",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:15"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:17"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:18"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:19"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTmirror",
            "src": "contracts/GenesisNFTmirror.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3743ab35dfcd461618d0c02a1031f538508543320b6e995c67a6c9bf50addefc": {
      "address": "0xF41Be3875a956e325C91a79440c64AdAAF4ca272",
      "txHash": "0x4addaaad63860d3f800af05b2a7de50fb61022f5853bf9d0190bb0f1b1144aa3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:32"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:33"
          },
          {
            "label": "transactionFee",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:34"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:35"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:36"
          },
          {
            "label": "maxDiscount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:37"
          },
          {
            "label": "dexQuoter",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IDexQuoter)36251",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:38"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)15168_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:39"
          },
          {
            "label": "stakingPositions",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(Position)36895_storage)",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:41"
          },
          {
            "label": "stakesPerAccount",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:42"
          },
          {
            "label": "durationCoefficients",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(UintToUintMap)18119_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:43"
          },
          {
            "label": "registeredFunds",
            "offset": 0,
            "slot": "264",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:44"
          },
          {
            "label": "stakingAccounts",
            "offset": 0,
            "slot": "266",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_uint256)38_storage",
            "contract": "StakingWlth",
            "src": "contracts/StakingWlth.sol:802"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]",
            "numberOfBytes": "1216"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDexQuoter)36251": {
            "label": "contract IDexQuoter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)36895_storage)": {
            "label": "mapping(uint256 => struct IStakingWlth.Position)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32Set)19200_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)17889_storage": {
            "label": "struct EnumerableMapUpgradeable.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)19200_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Period)36875_storage": {
            "label": "struct IStakingWlth.Period",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)36895_storage": {
            "label": "struct IStakingWlth.Position",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fund",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "amountInWlth",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountInUsdc",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "investment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "period",
                "type": "t_struct(Period)36875_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isCRP",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakedEnded",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToUintMap)18119_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)17889_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "676343c7c113f8065aac9f62e81ec3d26457aa7ccc74a5ba31eda52347529a18": {
      "address": "0x7119fbe987c02609Fbb07B6B0C28A1E16697bA84",
      "txHash": "0x1cc45bd7949995085c804b0fe937d6e338f03b577eb86a28e772a5a891b28d1d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "tokenValue",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:33"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)15168_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:35"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:36"
          },
          {
            "label": "_investors",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:38"
          },
          {
            "label": "_accountValueHistory",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_struct(History)13759_storage)",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:39"
          },
          {
            "label": "_totalValueHistory",
            "offset": 0,
            "slot": "457",
            "type": "t_struct(History)13759_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)44_storage",
            "contract": "InvestmentNFT",
            "src": "contracts/InvestmentNFT.sol:280"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)13764_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)13759_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)13764_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)15168_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)13759_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)13764_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b46ec6c49033381255b73ee471e95e517fcaf7b6f9e7b133dd4229f928c9602b": {
      "address": "0xD813d0c907eA0A67F43952aE774033AA30Ace2b0",
      "txHash": "0xc677309e258097b16a9118264204db5cc013575cb6ba35dfca1b2ce7526c6ec6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "currentState",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:11"
          },
          {
            "label": "functionsAllowed",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StateMachine",
            "src": "contracts/StateMachine.sol:43"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:40"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:45"
          },
          {
            "label": "investmentNft",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:50"
          },
          {
            "label": "stakingWlth",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(IStakingWlth)37116",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:55"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:60"
          },
          {
            "label": "genesisNftRevenue",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:65"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:70"
          },
          {
            "label": "burnAddress",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:75"
          },
          {
            "label": "managementFee",
            "offset": 20,
            "slot": "358",
            "type": "t_uint16",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:80"
          },
          {
            "label": "communityFund",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:82"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:87"
          },
          {
            "label": "totalIncome",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:92"
          },
          {
            "label": "payouts",
            "offset": 0,
            "slot": "362",
            "type": "t_array(t_struct(Payout)36379_storage)dyn_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:97"
          },
          {
            "label": "userTotalWithdrawal",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:102"
          },
          {
            "label": "_currentPayout",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_struct(PayoutPtr)27789_storage)",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:107"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "365",
            "type": "t_struct(AddressSet)19321_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:112"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_uint256)39_storage",
            "contract": "InvestmentFund",
            "src": "contracts/InvestmentFund.sol:552"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Payout)36379_storage)dyn_storage": {
            "label": "struct IInvestmentFund.Payout[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]",
            "numberOfBytes": "1248"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IStakingWlth)37116": {
            "label": "contract IStakingWlth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PayoutPtr)27789_storage)": {
            "label": "mapping(address => struct InvestmentFund.PayoutPtr)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes4,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes4 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)19321_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19006_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Block)36369_storage": {
            "label": "struct IInvestmentFund.Block",
            "members": [
              {
                "label": "number",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Payout)36379_storage": {
            "label": "struct IInvestmentFund.Payout",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "blockData",
                "type": "t_struct(Block)36369_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "inProfit",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PayoutPtr)27789_storage": {
            "label": "struct InvestmentFund.PayoutPtr",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)19006_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "66475b0702179bb6dd39c5af083dc0ecf015f729b578e4e66e9992a0d9110dc5": {
      "address": "0x638fAB4438691da8653c22BB5E31Cfc1786d414b",
      "txHash": "0x072b0d5351f521f7fb3c4230551508fd4a62f95f62032aa49519f7d0af2d24b1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "Project",
            "src": "contracts/Project.sol:26"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts/Project.sol:31"
          },
          {
            "label": "status",
            "offset": 0,
            "slot": "303",
            "type": "t_bytes32",
            "contract": "Project",
            "src": "contracts/Project.sol:36"
          },
          {
            "label": "investmentFund",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts/Project.sol:41"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(IVesting)37194",
            "contract": "Project",
            "src": "contracts/Project.sol:46"
          },
          {
            "label": "fundsAllocation",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts/Project.sol:51"
          },
          {
            "label": "fundsDeployed",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts/Project.sol:56"
          },
          {
            "label": "swapper",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(ISwapper)37155",
            "contract": "Project",
            "src": "contracts/Project.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "309",
            "type": "t_array(t_uint256)45_storage",
            "contract": "Project",
            "src": "contracts/Project.sol:156"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISwapper)37155": {
            "label": "contract ISwapper",
            "numberOfBytes": "20"
          },
          "t_contract(IVesting)37194": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "24a8424c410e47c20aa17bd4530a8955d41896afb35fbe56d3a5cafdc847acdd": {
      "address": "0x58D00F2996dBC1F6DD5810a5475056B49e83e08D",
      "txHash": "0xe254ccd0926c7c228ad5519bf76542d65b4d9a053a1dec561de64e9f774acc42",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_governor",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:23"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:25"
          },
          {
            "label": "s_symbol",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:26"
          },
          {
            "label": "s_allTokens",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:28"
          },
          {
            "label": "s_tokenOwner",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:29"
          },
          {
            "label": "s_balances",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:30"
          },
          {
            "label": "s_ownedTokens",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:31"
          },
          {
            "label": "s_ownedTokensList",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:32"
          },
          {
            "label": "s_ownedTokensIndex",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:33"
          },
          {
            "label": "s_tokenExist",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "211",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:172"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f3b17013c342377ed4ebbc4db1cfd83bb0036a29f99c02b4ebae45eb8d96c00b": {
      "address": "0x337B66394d2FDC63DF1F871F2CD87FA7B4bc7120",
      "txHash": "0xbc1d3b40f076007df927bd9e5ae25f9cecdac114d2589efe63ea112f0284f3c7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_governor",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:31"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:33"
          },
          {
            "label": "s_symbol",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:34"
          },
          {
            "label": "s_allTokens",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:36"
          },
          {
            "label": "s_tokenOwner",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:37"
          },
          {
            "label": "s_balances",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:38"
          },
          {
            "label": "s_ownedTokens",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:39"
          },
          {
            "label": "s_ownedTokensIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:40"
          },
          {
            "label": "s_tokenExist",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:246"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0e802a522c7a24f44187ecdba32f07a05f1d8bac6dc7812da07b89bc785302ad": {
      "address": "0xEF99fD7A32f1980149ebe457361434c569C2972c",
      "txHash": "0x17d9b233ba577ceab1b18889ef93494901e4dad54763f140a339ceb09019d268",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_governor",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:31"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:33"
          },
          {
            "label": "s_symbol",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:34"
          },
          {
            "label": "s_allTokens",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:36"
          },
          {
            "label": "s_tokenOwner",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:37"
          },
          {
            "label": "s_balances",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:38"
          },
          {
            "label": "s_ownedTokens",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:39"
          },
          {
            "label": "s_ownedTokensIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:40"
          },
          {
            "label": "s_tokenExist",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:246"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b306bfc1d84bf38899c7556eb89e7732cdc3b4da8b013900e2dbade3904210f6": {
      "address": "0x8e731abEB1B79185998344108509b414A0D83ef6",
      "txHash": "0x426a34932a26f9bac56b4697c47d89387d768a8dbd764e3bab85badbb118a0f1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_governor",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:31"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:33"
          },
          {
            "label": "s_symbol",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:34"
          },
          {
            "label": "s_allTokens",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:36"
          },
          {
            "label": "s_tokenOwner",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:37"
          },
          {
            "label": "s_balances",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:38"
          },
          {
            "label": "s_ownedTokens",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:39"
          },
          {
            "label": "s_ownedTokensIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:40"
          },
          {
            "label": "s_tokenExist",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:253"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a1e58306b33ae55cca2e36ee7bfb637893139a98ce8d5246d27d49d0c5f6acc8": {
      "address": "0xFF6a728dDd122B20c16f801e828561Ad9957eB7f",
      "txHash": "0xf13841ee41ec86e7995cf97d1440f8166ee41401a6136639ef1200aa1bceb8d8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_governor",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:31"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:33"
          },
          {
            "label": "s_symbol",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:34"
          },
          {
            "label": "s_allTokens",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:36"
          },
          {
            "label": "s_tokenOwner",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:37"
          },
          {
            "label": "s_balances",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:38"
          },
          {
            "label": "s_ownedTokens",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:39"
          },
          {
            "label": "s_ownedTokensIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:40"
          },
          {
            "label": "s_tokenExist",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:253"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ffd7a7565d55679ad09e3b3e11aa62b1bd194909732e8676fdfbd2109ef7689f": {
      "address": "0x85a62997216B8b96ea51a6fE92D5a4C99a38f3af",
      "txHash": "0x8938d2d76a921167aa0bb03b631717037b1aeb0a229791b70aa909fb94935162",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OwnablePausable",
            "src": "contracts/OwnablePausable.sol:46"
          },
          {
            "label": "s_governor",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:31"
          },
          {
            "label": "s_name",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:33"
          },
          {
            "label": "s_symbol",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:34"
          },
          {
            "label": "s_allTokens",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:36"
          },
          {
            "label": "s_tokenOwner",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:37"
          },
          {
            "label": "s_balances",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:38"
          },
          {
            "label": "s_ownedTokens",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:39"
          },
          {
            "label": "s_ownedTokensIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:40"
          },
          {
            "label": "s_tokenExist",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GenesisNFTMirror",
            "src": "contracts/GenesisNFTMirror.sol:245"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
